<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20151110 16:58:46.076" generator="Robot 2.9.1 (Python 2.7.9 on win32)">
<suite source="D:\TenX\FutureGeneraliPOC\TestSuites\FirePolicy.txt" id="s1" name="FirePolicy">
<test id="s1-t1" timeout="50 minutes" name="TC01: Validate Fun">
<kw type="setup" name="Open AS400 Console" library="common">
<arguments>
<arg>${GlobalConnFilePath}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>False</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 16:58:46.310" level="INFO">${kwStatus} = False</msg>
<status status="PASS" endtime="20151110 16:58:46.310" starttime="20151110 16:58:46.310"></status>
</kw>
<kw name="Get Connection Count" library="Insurance">
<doc>gets the available number of connections</doc>
<assign>
<var>${intanceCount}</var>
</assign>
<msg timestamp="20151110 16:58:46.326" level="INFO">${intanceCount} = 0</msg>
<status status="PASS" endtime="20151110 16:58:46.326" starttime="20151110 16:58:46.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${intanceCount}&gt;0</arg>
<arg>Set Test Message</arg>
<arg>INFO: AS400 Console opened successfully \n</arg>
<arg>append=True</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:46.326" starttime="20151110 16:58:46.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${intanceCount}&gt;0</arg>
<arg>Return From Keyword</arg>
<arg>True</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:46.341" starttime="20151110 16:58:46.326"></status>
</kw>
<kw name="Open Console" library="Insurance">
<doc>Invokes the Emulator by passing the .ws file path</doc>
<arguments>
<arg>${connFilePath}</arg>
</arguments>
<assign>
<var>${connectionStatus}</var>
</assign>
<msg timestamp="20151110 16:58:47.919" level="INFO">File path Exists: D:\TenX\FutureGeneraliPOC\Connections\PA_UAT.WS</msg>
<msg timestamp="20151110 16:58:47.919" level="INFO">${connectionStatus} = True</msg>
<status status="PASS" endtime="20151110 16:58:47.919" starttime="20151110 16:58:46.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${connectionStatus}==False</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>AS400 connection didn't open</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:47.919" starttime="20151110 16:58:47.919"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>AutoItLibrary.Wait For Active Window</arg>
<arg>Signon to iSeries</arg>
<arg>20</arg>
</arguments>
<assign>
<var>${popupStatus}</var>
</assign>
<kw name="Wait For Active Window" library="AutoItLibrary">
<doc>Wait up to _TimeOut_ seconds for the window with the given _WindowTitle_ and optional</doc>
<arguments>
<arg>Signon to iSeries</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20151110 16:58:48.498" level="INFO">AutoItLibrary.WaitForActiveWindow(WindowTitle='Signon to iSeries', WindowText='', TimeOut='20')</msg>
<msg timestamp="20151110 16:58:48.498" level="INFO">AutoItLibrary.WinWait(WindowTitle='Signon to iSeries', WindowText='', TimeOut='20')</msg>
<msg timestamp="20151110 16:58:48.498" level="INFO">AutoItLibrary.WinWaitActive(WindowTitle='Signon to iSeries', WindowText='', TimeOut='20')</msg>
<status status="PASS" endtime="20151110 16:58:48.498" starttime="20151110 16:58:47.919"></status>
</kw>
<msg timestamp="20151110 16:58:48.498" level="INFO">${popupStatus} = True</msg>
<status status="PASS" endtime="20151110 16:58:48.498" starttime="20151110 16:58:47.919"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Verify the Signon to iSeries popup</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:48.498" starttime="20151110 16:58:48.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${popupStatus}==False</arg>
<arg>Return From Keyword</arg>
<arg>True</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:48.498" starttime="20151110 16:58:48.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${popupStatus}</arg>
<arg>AutoItLibrary.Send</arg>
<arg>${GlobalUserName}</arg>
</arguments>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>${GlobalUserName}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:48.607" starttime="20151110 16:58:48.498"></status>
</kw>
<status status="PASS" endtime="20151110 16:58:48.607" starttime="20151110 16:58:48.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${popupStatus}</arg>
<arg>AutoItLibrary.Send</arg>
<arg>{TAB}</arg>
</arguments>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>{TAB}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:48.607" starttime="20151110 16:58:48.607"></status>
</kw>
<status status="PASS" endtime="20151110 16:58:48.607" starttime="20151110 16:58:48.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${popupStatus}</arg>
<arg>Sleep</arg>
<arg>1s</arg>
</arguments>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 16:58:49.623" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 16:58:49.623" starttime="20151110 16:58:48.607"></status>
</kw>
<status status="PASS" endtime="20151110 16:58:49.623" starttime="20151110 16:58:48.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${popupStatus}</arg>
<arg>AutoItLibrary.Send</arg>
<arg>${GlobalPassword}</arg>
</arguments>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>${GlobalPassword}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:49.701" starttime="20151110 16:58:49.623"></status>
</kw>
<status status="PASS" endtime="20151110 16:58:49.701" starttime="20151110 16:58:49.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${popupStatus}</arg>
<arg>AutoItLibrary.Send</arg>
<arg>{TAB}</arg>
</arguments>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>{TAB}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:49.716" starttime="20151110 16:58:49.701"></status>
</kw>
<status status="PASS" endtime="20151110 16:58:49.716" starttime="20151110 16:58:49.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${popupStatus}</arg>
<arg>AutoItLibrary.Send</arg>
<arg>{ENTER}</arg>
</arguments>
<kw name="Send" library="AutoItLibrary">
<doc>method Send</doc>
<arguments>
<arg>{ENTER}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:49.716" starttime="20151110 16:58:49.716"></status>
</kw>
<status status="PASS" endtime="20151110 16:58:49.716" starttime="20151110 16:58:49.716"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Sign On</arg>
<arg>25</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 16:58:53.732" level="INFO">${kwStatus} = True</msg>
<status status="PASS" endtime="20151110 16:58:53.732" starttime="20151110 16:58:49.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${kwStatus}==False</arg>
<arg>Send</arg>
<arg>!{F4}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:53.732" starttime="20151110 16:58:53.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${kwStatus}==False</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>\n AS400 console was not open or user unable to login at "Signon to iSeries" window</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:53.732" starttime="20151110 16:58:53.732"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>INFO: AS400 Console opened successfully \n</arg>
<arg>append=True</arg>
</arguments>
<msg timestamp="20151110 16:58:53.748" level="INFO">Set test message to:
INFO: AS400 Console opened successfully 
</msg>
<status status="PASS" endtime="20151110 16:58:53.748" starttime="20151110 16:58:53.732"></status>
</kw>
<status status="PASS" endtime="20151110 16:58:53.748" starttime="20151110 16:58:46.310"></status>
</kw>
<kw name="Login Into Application" library="common">
<arguments>
<arg>${GlobalUserName}</arg>
<arg>${GlobalPassword}</arg>
</arguments>
<assign>
<var>${loginStatus}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>False</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 16:58:53.748" level="INFO">${kwStatus} = False</msg>
<status status="PASS" endtime="20151110 16:58:53.748" starttime="20151110 16:58:53.748"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Sign On</arg>
<arg>60</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:53.763" starttime="20151110 16:58:53.748"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>User</arg>
<arg>${userName}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:54.779" starttime="20151110 16:58:53.763"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Password</arg>
<arg>${passWord}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:55.795" starttime="20151110 16:58:54.779"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:58:55.920" html="yes" level="INFO">&lt;a href="screenshot_1.jpg"&gt;&lt;img src="screenshot_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:58:55.920" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:58:55.920" starttime="20151110 16:58:55.795"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:55.920" starttime="20151110 16:58:55.920"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Sign-on Information</arg>
</arguments>
<assign>
<var>${bStatus}</var>
</assign>
<msg timestamp="20151110 16:58:56.935" level="INFO">${bStatus} = True</msg>
<status status="PASS" endtime="20151110 16:58:56.935" starttime="20151110 16:58:55.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bStatus}</arg>
<arg>Press Key</arg>
<arg>[enter]</arg>
</arguments>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:56.951" starttime="20151110 16:58:56.935"></status>
</kw>
<status status="PASS" endtime="20151110 16:58:56.951" starttime="20151110 16:58:56.935"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Display Messages</arg>
</arguments>
<assign>
<var>${bStatus}</var>
</assign>
<msg timestamp="20151110 16:58:57.967" level="INFO">${bStatus} = True</msg>
<status status="PASS" endtime="20151110 16:58:57.967" starttime="20151110 16:58:56.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bStatus}</arg>
<arg>Press Key</arg>
<arg>[enter]</arg>
</arguments>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:57.982" starttime="20151110 16:58:57.967"></status>
</kw>
<status status="PASS" endtime="20151110 16:58:57.982" starttime="20151110 16:58:57.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bStatus}==False</arg>
<arg>Wait For Text</arg>
<arg>Display Program Messages</arg>
</arguments>
<assign>
<var>${bStatus}</var>
</assign>
<msg timestamp="20151110 16:58:57.998" level="INFO">${bStatus} = None</msg>
<status status="PASS" endtime="20151110 16:58:57.998" starttime="20151110 16:58:57.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${bStatus}'=='True'</arg>
<arg>Press Key</arg>
<arg>[enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:58:57.998" starttime="20151110 16:58:57.998"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>System Master Menu</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 16:58:59.013" level="INFO">${kwStatus} = True</msg>
<status status="PASS" endtime="20151110 16:58:59.013" starttime="20151110 16:58:57.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${kwStatus}</arg>
<arg>Set Test Message</arg>
<arg>INFO: Logged in Successfully with UserId: ${userName} \n</arg>
<arg>append=True</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>INFO: Logged in Successfully with UserId: ${userName} \n</arg>
<arg>append=True</arg>
</arguments>
<msg timestamp="20151110 16:58:59.013" level="INFO">Set test message to:
INFO: AS400 Console opened successfully 
 INFO: Logged in Successfully with UserId: TENX01 
</msg>
<status status="PASS" endtime="20151110 16:58:59.013" starttime="20151110 16:58:59.013"></status>
</kw>
<status status="PASS" endtime="20151110 16:58:59.013" starttime="20151110 16:58:59.013"></status>
</kw>
<msg timestamp="20151110 16:58:59.013" level="INFO">${loginStatus} = True</msg>
<status status="PASS" endtime="20151110 16:58:59.013" starttime="20151110 16:58:53.748"></status>
</kw>
<kw name="Get Messages" library="common">
<assign>
<var>${messageDetails}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 16:59:00.029" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 16:59:00.029" starttime="20151110 16:58:59.013"></status>
</kw>
<kw name="Get Value By Row And Column" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>24</arg>
<arg>1</arg>
<arg>80</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 16:59:00.029" level="INFO">${lastRowData} =                (C) Copyright CSC Corporation Limited 1986 - 2015.               </msg>
<status status="PASS" endtime="20151110 16:59:00.029" starttime="20151110 16:59:00.029"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:00.154" html="yes" level="INFO">&lt;a href="screenshot_2.jpg"&gt;&lt;img src="screenshot_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:00.154" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:00.154" starttime="20151110 16:59:00.045"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastRowData.strip()}</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 16:59:00.154" level="INFO">${lastRowData} = (C) Copyright CSC Corporation Limited 1986 - 2015.</msg>
<status status="PASS" endtime="20151110 16:59:00.154" starttime="20151110 16:59:00.154"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lastRowData}</arg>
<arg>¦</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 16:59:00.154" level="INFO">${tempList} = [u'(C) Copyright CSC Corporation Limited 1986 - 2015.']</msg>
<status status="PASS" endtime="20151110 16:59:00.154" starttime="20151110 16:59:00.154"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:00.170" starttime="20151110 16:59:00.170"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<msg timestamp="20151110 16:59:00.170" level="INFO">List has one item:
(C) Copyright CSC Corporation Limited 1986 - 2015.</msg>
<status status="PASS" endtime="20151110 16:59:00.170" starttime="20151110 16:59:00.170"></status>
</kw>
<msg timestamp="20151110 16:59:00.170" level="INFO">${messageDetails} = [u'(C) Copyright CSC Corporation Limited 1986 - 2015.']</msg>
<status status="PASS" endtime="20151110 16:59:00.170" starttime="20151110 16:58:59.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${loginStatus}==False</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>Login into application was failed.Error Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:00.170" starttime="20151110 16:59:00.170"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${timeStamp}</var>
</assign>
<msg timestamp="20151110 16:59:00.170" level="INFO">${timeStamp} = 1447154940</msg>
<status status="PASS" endtime="20151110 16:59:00.170" starttime="20151110 16:59:00.170"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${LogExcelResultFile}</arg>
<arg>${LogFolder}logFile_${timeStamp}.xls</arg>
</arguments>
<msg timestamp="20151110 16:59:00.170" level="INFO">${LogExcelResultFile} = D:\TenX\FutureGeneraliPOC\Results\logFile_1447154940.xls</msg>
<status status="PASS" endtime="20151110 16:59:00.170" starttime="20151110 16:59:00.170"></status>
</kw>
<kw name="Create Ms Excel File Using Existing File" library="CustomLibrary">
<doc>It retuen the list of registration codes</doc>
<arguments>
<arg>${testDataFilePath}</arg>
<arg>${LogExcelResultFile}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:00.185" starttime="20151110 16:59:00.170"></status>
</kw>
<kw name="Validate Creation Of Inward Trnsaction and Policy Creation" library="inwardtransactions">
<kw name="Read Multiple Testdata" library="CustomLibrary">
<doc>read multiple rows of testdata based on testcase name</doc>
<arguments>
<arg>${testDataFilePath}</arg>
<arg>InwardTransactionData</arg>
<arg>Y</arg>
</arguments>
<assign>
<var>${InwardTestData}</var>
</assign>
<msg timestamp="20151110 16:59:00.185" level="INFO">noofrows: 14</msg>
<msg timestamp="20151110 16:59:00.185" level="INFO">${InwardTestData} = {'1': {u'Category': u'NA', u'Client Name': u'Ramu', u'CntTyp': u'FRE', u'ScreenShot': '', u'IDV': u'NA', u'DISC %': u'NA', u'Initiator': u'NA', u'Apln No': '', u'Agent Comm Type': u'Gross Commission',...</msg>
<status status="PASS" endtime="20151110 16:59:00.185" starttime="20151110 16:59:00.185"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${InwardTestData}</arg>
</arguments>
<assign>
<var>${iSize}</var>
</assign>
<msg timestamp="20151110 16:59:00.185" level="INFO">Length is 2</msg>
<msg timestamp="20151110 16:59:00.185" level="INFO">${iSize} = 2</msg>
<status status="PASS" endtime="20151110 16:59:00.185" starttime="20151110 16:59:00.185"></status>
</kw>
<kw type="for" name="${rowIndex} IN RANGE [ 1 | ${iSize}+1 ]">
<kw type="foritem" name="${rowIndex} = 1">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${rowIndex}</arg>
</arguments>
<assign>
<var>${rowIndex}</var>
</assign>
<msg timestamp="20151110 16:59:00.185" level="INFO">${rowIndex} = 1</msg>
<status status="PASS" endtime="20151110 16:59:00.185" starttime="20151110 16:59:00.185"></status>
</kw>
<kw name="Get Messages" library="common">
<assign>
<var>${messageDetails}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 16:59:01.185" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 16:59:01.185" starttime="20151110 16:59:00.185"></status>
</kw>
<kw name="Get Value By Row And Column" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>24</arg>
<arg>1</arg>
<arg>80</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 16:59:01.185" level="INFO">${lastRowData} =                (C) Copyright CSC Corporation Limited 1986 - 2015.               </msg>
<status status="PASS" endtime="20151110 16:59:01.185" starttime="20151110 16:59:01.185"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:01.279" html="yes" level="INFO">&lt;a href="screenshot_3.jpg"&gt;&lt;img src="screenshot_3.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:01.279" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:01.279" starttime="20151110 16:59:01.185"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastRowData.strip()}</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 16:59:01.279" level="INFO">${lastRowData} = (C) Copyright CSC Corporation Limited 1986 - 2015.</msg>
<status status="PASS" endtime="20151110 16:59:01.279" starttime="20151110 16:59:01.279"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lastRowData}</arg>
<arg>¦</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 16:59:01.279" level="INFO">${tempList} = [u'(C) Copyright CSC Corporation Limited 1986 - 2015.']</msg>
<status status="PASS" endtime="20151110 16:59:01.279" starttime="20151110 16:59:01.279"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:01.279" starttime="20151110 16:59:01.279"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<msg timestamp="20151110 16:59:01.279" level="INFO">List has one item:
(C) Copyright CSC Corporation Limited 1986 - 2015.</msg>
<status status="PASS" endtime="20151110 16:59:01.279" starttime="20151110 16:59:01.279"></status>
</kw>
<msg timestamp="20151110 16:59:01.279" level="INFO">${messageDetails} = [u'(C) Copyright CSC Corporation Limited 1986 - 2015.']</msg>
<status status="PASS" endtime="20151110 16:59:01.279" starttime="20151110 16:59:00.185"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${messageDetails}</arg>
</arguments>
<assign>
<var>${NoOfError}</var>
</assign>
<msg timestamp="20151110 16:59:01.279" level="INFO">Length is 1</msg>
<msg timestamp="20151110 16:59:01.279" level="INFO">${NoOfError} = 1</msg>
<status status="PASS" endtime="20151110 16:59:01.279" starttime="20151110 16:59:01.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${NoOfError}&gt;0</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Should Contain</arg>
<arg>@{messageDetails}[0]</arg>
<arg>IBM\\Client Access\\Emulator\\autclist.tlb\x00</arg>
</arguments>
<assign>
<var>${EmulatorStatus}</var>
</assign>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>@{messageDetails}[0]</arg>
<arg>IBM\\Client Access\\Emulator\\autclist.tlb\x00</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` one or more times.</doc>
<arguments>
<arg>@{messageDetails}[0]</arg>
<arg>IBM\\Client Access\\Emulator\\autclist.tlb\x00</arg>
</arguments>
<msg timestamp="20151110 16:59:01.295" level="FAIL">'(C) Copyright CSC Corporation Limited 1986 - 2015.' does not contain 'IBM\Client Access\Emulator\autclist.tlb'</msg>
<status status="FAIL" endtime="20151110 16:59:01.295" starttime="20151110 16:59:01.295"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:01.295" starttime="20151110 16:59:01.295"></status>
</kw>
<msg timestamp="20151110 16:59:01.295" level="INFO">${EmulatorStatus} = False</msg>
<status status="PASS" endtime="20151110 16:59:01.295" starttime="20151110 16:59:01.279"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${NoOfError}&gt;0</arg>
<arg>${EmulatorStatus}</arg>
<arg>False</arg>
</arguments>
<assign>
<var>${EmulatorStatus}</var>
</assign>
<msg timestamp="20151110 16:59:01.295" level="INFO">${EmulatorStatus} = False</msg>
<status status="PASS" endtime="20151110 16:59:01.295" starttime="20151110 16:59:01.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${EmulatorStatus}==True</arg>
<arg>Close AS400 Console</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:01.295" starttime="20151110 16:59:01.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${EmulatorStatus}==True</arg>
<arg>Open AS400 Console</arg>
<arg>${GlobalConnFilePath}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:01.295" starttime="20151110 16:59:01.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${EmulatorStatus}==True</arg>
<arg>Login Into Application</arg>
<arg>${GlobalUserName}</arg>
<arg>${GlobalPassword}</arg>
</arguments>
<assign>
<var>${loginBStatus}</var>
</assign>
<msg timestamp="20151110 16:59:01.295" level="INFO">${loginBStatus} = None</msg>
<status status="PASS" endtime="20151110 16:59:01.295" starttime="20151110 16:59:01.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${loginBStatus}'=='False'</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>Login into application was failed.Error Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:01.295" starttime="20151110 16:59:01.295"></status>
</kw>
<kw name="Mouse Move" library="AutoItLibrary">
<doc>method MouseMove</doc>
<arguments>
<arg>100</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:01.842" starttime="20151110 16:59:01.295"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20151110 16:59:03.842" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20151110 16:59:03.842" starttime="20151110 16:59:01.842"></status>
</kw>
<kw name="Mouse Move" library="AutoItLibrary">
<doc>method MouseMove</doc>
<arguments>
<arg>200</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:04.264" starttime="20151110 16:59:03.842"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${InwardTestData}</arg>
<arg>${rowIndex}</arg>
</arguments>
<assign>
<var>${Inwarddetails}</var>
</assign>
<msg timestamp="20151110 16:59:04.264" level="INFO">${Inwarddetails} = {u'Category': u'NA', u'Client Name': u'Ramu', u'CntTyp': u'FRE', u'ScreenShot': '', u'IDV': u'NA', u'DISC %': u'NA', u'Initiator': u'NA', u'Apln No': '', u'Agent Comm Type': u'Gross Commission', u'Bra...</msg>
<status status="PASS" endtime="20151110 16:59:04.264" starttime="20151110 16:59:04.264"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Action</arg>
</arguments>
<assign>
<var>${ActionType}</var>
</assign>
<msg timestamp="20151110 16:59:04.264" level="INFO">${ActionType} = A</msg>
<status status="PASS" endtime="20151110 16:59:04.264" starttime="20151110 16:59:04.264"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Branch</arg>
</arguments>
<assign>
<var>${BranchCode}</var>
</assign>
<msg timestamp="20151110 16:59:04.264" level="INFO">${BranchCode} = 10</msg>
<status status="PASS" endtime="20151110 16:59:04.264" starttime="20151110 16:59:04.264"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Department</arg>
</arguments>
<assign>
<var>${DeptCode}</var>
</assign>
<msg timestamp="20151110 16:59:04.264" level="INFO">${DeptCode} = P</msg>
<status status="PASS" endtime="20151110 16:59:04.264" starttime="20151110 16:59:04.264"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>ExpectedInwardScreenStatus</arg>
</arguments>
<assign>
<var>${expInwardScreenStatus}</var>
</assign>
<msg timestamp="20151110 16:59:04.264" level="INFO">${expInwardScreenStatus} = False</msg>
<status status="PASS" endtime="20151110 16:59:04.264" starttime="20151110 16:59:04.264"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>ExpectedInwardCreationStatus</arg>
</arguments>
<assign>
<var>${expInwardCreationStatus}</var>
</assign>
<msg timestamp="20151110 16:59:04.264" level="INFO">${expInwardCreationStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:04.264" starttime="20151110 16:59:04.264"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>RecordNumber</arg>
</arguments>
<assign>
<var>${Recordvalue}</var>
</assign>
<msg timestamp="20151110 16:59:04.264" level="INFO">${Recordvalue} = Record1</msg>
<status status="PASS" endtime="20151110 16:59:04.264" starttime="20151110 16:59:04.264"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:04.326" html="yes" level="INFO">&lt;a href="screenshot_4.jpg"&gt;&lt;img src="screenshot_4.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:04.326" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:04.326" starttime="20151110 16:59:04.264"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>System Master Menu</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:04.326" starttime="20151110 16:59:04.326"></status>
</kw>
<kw name="Select Menu Item" library="Insurance">
<doc>To Select the Module or Sub module.</doc>
<arguments>
<arg>IO Module</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:04.342" starttime="20151110 16:59:04.326"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:04.435" html="yes" level="INFO">&lt;a href="screenshot_5.jpg"&gt;&lt;img src="screenshot_5.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:04.435" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:04.435" starttime="20151110 16:59:04.342"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Inward Transaction</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:04.435" starttime="20151110 16:59:04.435"></status>
</kw>
<kw name="Select Menu Item" library="Insurance">
<doc>To Select the Module or Sub module.</doc>
<arguments>
<arg>Inward Transaction</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:04.451" starttime="20151110 16:59:04.435"></status>
</kw>
<kw name="Select Inward Transaction Type" library="inwardtransactions">
<arguments>
<arg>${ActionType}</arg>
<arg>${BranchCode}</arg>
<arg>${DeptCode}</arg>
</arguments>
<assign>
<var>${TransactionScreenStatus}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>False</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 16:59:04.451" level="INFO">${kwStatus} = False</msg>
<status status="PASS" endtime="20151110 16:59:04.451" starttime="20151110 16:59:04.451"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Action</arg>
</arguments>
<assign>
<var>${bAStatus}</var>
</assign>
<msg timestamp="20151110 16:59:05.451" level="INFO">${bAStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:05.451" starttime="20151110 16:59:04.451"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Branch</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${bBStatus}</var>
</assign>
<msg timestamp="20151110 16:59:05.467" level="INFO">${bBStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:05.467" starttime="20151110 16:59:05.451"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Department</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${bDStatus}</var>
</assign>
<msg timestamp="20151110 16:59:05.482" level="INFO">${bDStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:05.482" starttime="20151110 16:59:05.467"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${bAStatus} and ${bBStatus} and ${bDStatus}</arg>
</arguments>
<assign>
<var>${bStatus}</var>
</assign>
<msg timestamp="20151110 16:59:05.482" level="INFO">${bStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:05.482" starttime="20151110 16:59:05.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bStatus}==False</arg>
<arg>Return From Keyword</arg>
<arg>${bStatus}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:05.482" starttime="20151110 16:59:05.482"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Action</arg>
<arg>${actionType}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:06.498" starttime="20151110 16:59:05.482"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Branch</arg>
<arg>${branchNo}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:07.503" starttime="20151110 16:59:06.498"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Department</arg>
<arg>${deptName}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:08.519" starttime="20151110 16:59:07.503"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:08.639" html="yes" level="INFO">&lt;a href="screenshot_6.jpg"&gt;&lt;img src="screenshot_6.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:08.639" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:08.639" starttime="20151110 16:59:08.519"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:08.644" starttime="20151110 16:59:08.639"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Inward Transaction Details Create</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 16:59:13.755" html="yes" level="INFO">&lt;a href="screenshot_7.jpg"&gt;&lt;img src="screenshot_7.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:13.755" level="INFO">No Text found: Inward Transaction Details Create
bStatus: True</msg>
<msg timestamp="20151110 16:59:13.755" level="INFO">${kwStatus} = False</msg>
<status status="PASS" endtime="20151110 16:59:13.755" starttime="20151110 16:59:08.644"></status>
</kw>
<msg timestamp="20151110 16:59:13.755" level="INFO">${TransactionScreenStatus} = False</msg>
<status status="PASS" endtime="20151110 16:59:13.755" starttime="20151110 16:59:04.451"></status>
</kw>
<kw name="Get Messages" library="common">
<assign>
<var>${messageDetails}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 16:59:14.756" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 16:59:14.756" starttime="20151110 16:59:13.755"></status>
</kw>
<kw name="Get Value By Row And Column" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>24</arg>
<arg>1</arg>
<arg>80</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 16:59:14.766" level="INFO">${lastRowData} =  Invalid code            ¦                                                      </msg>
<status status="PASS" endtime="20151110 16:59:14.766" starttime="20151110 16:59:14.756"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:14.871" html="yes" level="INFO">&lt;a href="screenshot_8.jpg"&gt;&lt;img src="screenshot_8.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:14.871" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:14.871" starttime="20151110 16:59:14.771"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastRowData.strip()}</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 16:59:14.876" level="INFO">${lastRowData} = Invalid code            ¦</msg>
<status status="PASS" endtime="20151110 16:59:14.876" starttime="20151110 16:59:14.871"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lastRowData}</arg>
<arg>¦</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 16:59:14.876" level="INFO">${tempList} = [u'Invalid code            ', u'']</msg>
<status status="PASS" endtime="20151110 16:59:14.876" starttime="20151110 16:59:14.876"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:14.881" starttime="20151110 16:59:14.876"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<msg timestamp="20151110 16:59:14.881" level="INFO">List has one item:
Invalid code            </msg>
<status status="PASS" endtime="20151110 16:59:14.881" starttime="20151110 16:59:14.881"></status>
</kw>
<msg timestamp="20151110 16:59:14.881" level="INFO">${messageDetails} = [u'Invalid code            ']</msg>
<status status="PASS" endtime="20151110 16:59:14.881" starttime="20151110 16:59:13.755"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${TransactionScreenStatus}'=='False' and '${expInwardScreenStatus}'=='False'</arg>
</arguments>
<assign>
<var>${condition1}</var>
</assign>
<msg timestamp="20151110 16:59:14.886" level="INFO">${condition1} = True</msg>
<status status="PASS" endtime="20151110 16:59:14.886" starttime="20151110 16:59:14.881"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${TransactionScreenStatus}'=='False' and '${expInwardScreenStatus}'=='True'</arg>
</arguments>
<assign>
<var>${condition2}</var>
</assign>
<msg timestamp="20151110 16:59:14.891" level="INFO">${condition2} = False</msg>
<status status="PASS" endtime="20151110 16:59:14.891" starttime="20151110 16:59:14.886"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${TransactionScreenStatus}'=='True' and '${expInwardScreenStatus}'=='False'</arg>
</arguments>
<assign>
<var>${condition3}</var>
</assign>
<msg timestamp="20151110 16:59:14.896" level="INFO">${condition3} = False</msg>
<status status="PASS" endtime="20151110 16:59:14.896" starttime="20151110 16:59:14.891"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Set Test Message</arg>
<arg>INFO:For ${Recordvalue}, Inward Transaction Type selection was failed. Error Details: ${messageDetails}</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>INFO:For ${Recordvalue}, Inward Transaction Type selection was failed. Error Details: ${messageDetails}</arg>
</arguments>
<msg timestamp="20151110 16:59:14.896" level="INFO">Set test message to:
INFO:For Record1, Inward Transaction Type selection was failed. Error Details: [u'Invalid code            ']</msg>
<status status="PASS" endtime="20151110 16:59:14.896" starttime="20151110 16:59:14.896"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:14.896" starttime="20151110 16:59:14.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:14.911" starttime="20151110 16:59:14.901"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:14.911" starttime="20151110 16:59:14.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Wait For Text</arg>
<arg>IO Module</arg>
</arguments>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>IO Module</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:15.929" starttime="20151110 16:59:14.911"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:15.929" starttime="20151110 16:59:14.911"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:15.944" starttime="20151110 16:59:15.929"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:15.949" starttime="20151110 16:59:15.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>Inward Transaction Type selection was failed. Error Details: ${messageDetails}</arg>
</arguments>
<kw name="Update Result to Log File" library="common">
<arguments>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>Inward Transaction Type selection was failed. Error Details: ${messageDetails}</arg>
</arguments>
<kw name="Get Latest File In Folder" library="CustomLibrary">
<arguments>
<arg>${OUTPUT_DIR}</arg>
<arg>screenshot</arg>
</arguments>
<assign>
<var>${ScreenShotFileName}</var>
</assign>
<msg timestamp="20151110 16:59:15.954" level="INFO">D:\TenX\FutureGeneraliPOC\Results\20151110_165845\screenshot_8.jpg</msg>
<msg timestamp="20151110 16:59:15.954" level="INFO">${ScreenShotFileName} = D:\TenX\FutureGeneraliPOC\Results\20151110_165845\screenshot_8.jpg</msg>
<status status="PASS" endtime="20151110 16:59:15.954" starttime="20151110 16:59:15.954"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>RecordNumber</arg>
<arg>${RecorNumber}</arg>
<arg>Status</arg>
<arg>${Status}</arg>
<arg>Message</arg>
<arg>${Message}</arg>
<arg>ScreenShot</arg>
<arg>File:\\\\${ScreenShotFileName}</arg>
</arguments>
<assign>
<var>${Resultdict}</var>
</assign>
<msg timestamp="20151110 16:59:15.959" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20151110 16:59:15.964" level="INFO">${Resultdict} = {u'RecordNumber': u'Record1', u'Status': u"'Fail", u'Message': u"Inward Transaction Type selection was failed. Error Details: [u'Invalid code            ']", u'ScreenShot': u'File:\\\\D:\\TenX\\Future...</msg>
<status status="PASS" endtime="20151110 16:59:15.964" starttime="20151110 16:59:15.954"></status>
</kw>
<kw name="Updated Ms Excel File" library="CustomLibrary">
<doc>It retuen the list of registration codes</doc>
<arguments>
<arg>${LogExcelResultFile}</arg>
<arg>InwardTransactionData</arg>
<arg>${Resultdict}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:17.295" starttime="20151110 16:59:15.964"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:17.295" starttime="20151110 16:59:15.949"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:17.295" starttime="20151110 16:59:15.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20151110 16:59:17.300" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20151110 16:59:17.300" starttime="20151110 16:59:17.300"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:17.300" starttime="20151110 16:59:17.300"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:17.300" starttime="20151110 16:59:00.185"></status>
</kw>
<kw type="foritem" name="${rowIndex} = 2">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${rowIndex}</arg>
</arguments>
<assign>
<var>${rowIndex}</var>
</assign>
<msg timestamp="20151110 16:59:17.300" level="INFO">${rowIndex} = 2</msg>
<status status="PASS" endtime="20151110 16:59:17.300" starttime="20151110 16:59:17.300"></status>
</kw>
<kw name="Get Messages" library="common">
<assign>
<var>${messageDetails}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 16:59:18.305" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 16:59:18.305" starttime="20151110 16:59:17.300"></status>
</kw>
<kw name="Get Value By Row And Column" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>24</arg>
<arg>1</arg>
<arg>80</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 16:59:18.320" level="INFO">${lastRowData} =                                                                                 </msg>
<status status="PASS" endtime="20151110 16:59:18.320" starttime="20151110 16:59:18.305"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:18.390" html="yes" level="INFO">&lt;a href="screenshot_9.jpg"&gt;&lt;img src="screenshot_9.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:18.390" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:18.390" starttime="20151110 16:59:18.320"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastRowData.strip()}</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 16:59:18.395" level="INFO">${lastRowData} = </msg>
<status status="PASS" endtime="20151110 16:59:18.395" starttime="20151110 16:59:18.390"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lastRowData}</arg>
<arg>¦</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 16:59:18.395" level="INFO">${tempList} = [u'']</msg>
<status status="PASS" endtime="20151110 16:59:18.395" starttime="20151110 16:59:18.395"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:18.395" starttime="20151110 16:59:18.395"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<msg timestamp="20151110 16:59:18.395" level="INFO">List is empty.</msg>
<status status="PASS" endtime="20151110 16:59:18.395" starttime="20151110 16:59:18.395"></status>
</kw>
<msg timestamp="20151110 16:59:18.395" level="INFO">${messageDetails} = []</msg>
<status status="PASS" endtime="20151110 16:59:18.395" starttime="20151110 16:59:17.300"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${messageDetails}</arg>
</arguments>
<assign>
<var>${NoOfError}</var>
</assign>
<msg timestamp="20151110 16:59:18.395" level="INFO">Length is 0</msg>
<msg timestamp="20151110 16:59:18.395" level="INFO">${NoOfError} = 0</msg>
<status status="PASS" endtime="20151110 16:59:18.395" starttime="20151110 16:59:18.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${NoOfError}&gt;0</arg>
<arg>Run Keyword And Return Status</arg>
<arg>Should Contain</arg>
<arg>@{messageDetails}[0]</arg>
<arg>IBM\\Client Access\\Emulator\\autclist.tlb\x00</arg>
</arguments>
<assign>
<var>${EmulatorStatus}</var>
</assign>
<msg timestamp="20151110 16:59:18.400" level="INFO">${EmulatorStatus} = None</msg>
<status status="PASS" endtime="20151110 16:59:18.400" starttime="20151110 16:59:18.395"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${NoOfError}&gt;0</arg>
<arg>${EmulatorStatus}</arg>
<arg>False</arg>
</arguments>
<assign>
<var>${EmulatorStatus}</var>
</assign>
<msg timestamp="20151110 16:59:18.400" level="INFO">${EmulatorStatus} = False</msg>
<status status="PASS" endtime="20151110 16:59:18.400" starttime="20151110 16:59:18.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${EmulatorStatus}==True</arg>
<arg>Close AS400 Console</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:18.400" starttime="20151110 16:59:18.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${EmulatorStatus}==True</arg>
<arg>Open AS400 Console</arg>
<arg>${GlobalConnFilePath}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:18.405" starttime="20151110 16:59:18.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${EmulatorStatus}==True</arg>
<arg>Login Into Application</arg>
<arg>${GlobalUserName}</arg>
<arg>${GlobalPassword}</arg>
</arguments>
<assign>
<var>${loginBStatus}</var>
</assign>
<msg timestamp="20151110 16:59:18.405" level="INFO">${loginBStatus} = None</msg>
<status status="PASS" endtime="20151110 16:59:18.405" starttime="20151110 16:59:18.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${loginBStatus}'=='False'</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>Login into application was failed.Error Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:18.405" starttime="20151110 16:59:18.405"></status>
</kw>
<kw name="Mouse Move" library="AutoItLibrary">
<doc>method MouseMove</doc>
<arguments>
<arg>100</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:18.950" starttime="20151110 16:59:18.405"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20151110 16:59:20.951" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20151110 16:59:20.951" starttime="20151110 16:59:18.950"></status>
</kw>
<kw name="Mouse Move" library="AutoItLibrary">
<doc>method MouseMove</doc>
<arguments>
<arg>200</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:21.376" starttime="20151110 16:59:20.951"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${InwardTestData}</arg>
<arg>${rowIndex}</arg>
</arguments>
<assign>
<var>${Inwarddetails}</var>
</assign>
<msg timestamp="20151110 16:59:21.376" level="INFO">${Inwarddetails} = {u'Category': u'NA', u'Client Name': u'Vasu', u'CntTyp': u'FRE', u'ScreenShot': '', u'IDV': u'NA', u'DISC %': u'NA', u'Initiator': u'NA', u'Apln No': '', u'Agent Comm Type': u'Gross Commission', u'Bra...</msg>
<status status="PASS" endtime="20151110 16:59:21.376" starttime="20151110 16:59:21.376"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Action</arg>
</arguments>
<assign>
<var>${ActionType}</var>
</assign>
<msg timestamp="20151110 16:59:21.381" level="INFO">${ActionType} = A</msg>
<status status="PASS" endtime="20151110 16:59:21.381" starttime="20151110 16:59:21.376"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Branch</arg>
</arguments>
<assign>
<var>${BranchCode}</var>
</assign>
<msg timestamp="20151110 16:59:21.381" level="INFO">${BranchCode} = 10</msg>
<status status="PASS" endtime="20151110 16:59:21.381" starttime="20151110 16:59:21.381"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Department</arg>
</arguments>
<assign>
<var>${DeptCode}</var>
</assign>
<msg timestamp="20151110 16:59:21.381" level="INFO">${DeptCode} = PP</msg>
<status status="PASS" endtime="20151110 16:59:21.381" starttime="20151110 16:59:21.381"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>ExpectedInwardScreenStatus</arg>
</arguments>
<assign>
<var>${expInwardScreenStatus}</var>
</assign>
<msg timestamp="20151110 16:59:21.381" level="INFO">${expInwardScreenStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:21.381" starttime="20151110 16:59:21.381"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>ExpectedInwardCreationStatus</arg>
</arguments>
<assign>
<var>${expInwardCreationStatus}</var>
</assign>
<msg timestamp="20151110 16:59:21.386" level="INFO">${expInwardCreationStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:21.386" starttime="20151110 16:59:21.381"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>RecordNumber</arg>
</arguments>
<assign>
<var>${Recordvalue}</var>
</assign>
<msg timestamp="20151110 16:59:21.386" level="INFO">${Recordvalue} = Record2</msg>
<status status="PASS" endtime="20151110 16:59:21.386" starttime="20151110 16:59:21.386"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:21.441" html="yes" level="INFO">&lt;a href="screenshot_10.jpg"&gt;&lt;img src="screenshot_10.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:21.441" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:21.441" starttime="20151110 16:59:21.386"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>System Master Menu</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:21.446" starttime="20151110 16:59:21.441"></status>
</kw>
<kw name="Select Menu Item" library="Insurance">
<doc>To Select the Module or Sub module.</doc>
<arguments>
<arg>IO Module</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:21.461" starttime="20151110 16:59:21.446"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:21.526" html="yes" level="INFO">&lt;a href="screenshot_11.jpg"&gt;&lt;img src="screenshot_11.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:21.526" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:21.526" starttime="20151110 16:59:21.461"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Inward Transaction</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:22.531" starttime="20151110 16:59:21.526"></status>
</kw>
<kw name="Select Menu Item" library="Insurance">
<doc>To Select the Module or Sub module.</doc>
<arguments>
<arg>Inward Transaction</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:22.581" starttime="20151110 16:59:22.536"></status>
</kw>
<kw name="Select Inward Transaction Type" library="inwardtransactions">
<arguments>
<arg>${ActionType}</arg>
<arg>${BranchCode}</arg>
<arg>${DeptCode}</arg>
</arguments>
<assign>
<var>${TransactionScreenStatus}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>False</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 16:59:22.581" level="INFO">${kwStatus} = False</msg>
<status status="PASS" endtime="20151110 16:59:22.581" starttime="20151110 16:59:22.581"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Action</arg>
</arguments>
<assign>
<var>${bAStatus}</var>
</assign>
<msg timestamp="20151110 16:59:23.597" level="INFO">${bAStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:23.597" starttime="20151110 16:59:22.581"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Branch</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${bBStatus}</var>
</assign>
<msg timestamp="20151110 16:59:23.612" level="INFO">${bBStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:23.612" starttime="20151110 16:59:23.597"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Department</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${bDStatus}</var>
</assign>
<msg timestamp="20151110 16:59:23.627" level="INFO">${bDStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:23.627" starttime="20151110 16:59:23.612"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${bAStatus} and ${bBStatus} and ${bDStatus}</arg>
</arguments>
<assign>
<var>${bStatus}</var>
</assign>
<msg timestamp="20151110 16:59:23.632" level="INFO">${bStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:23.632" starttime="20151110 16:59:23.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bStatus}==False</arg>
<arg>Return From Keyword</arg>
<arg>${bStatus}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:23.632" starttime="20151110 16:59:23.632"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Action</arg>
<arg>${actionType}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:24.652" starttime="20151110 16:59:23.632"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Branch</arg>
<arg>${branchNo}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:25.692" starttime="20151110 16:59:24.657"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Department</arg>
<arg>${deptName}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:26.727" starttime="20151110 16:59:25.692"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:26.847" html="yes" level="INFO">&lt;a href="screenshot_12.jpg"&gt;&lt;img src="screenshot_12.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:26.847" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:26.847" starttime="20151110 16:59:26.727"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:26.852" starttime="20151110 16:59:26.847"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Inward Transaction Details Create</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 16:59:27.858" level="INFO">${kwStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:27.858" starttime="20151110 16:59:26.852"></status>
</kw>
<msg timestamp="20151110 16:59:27.858" level="INFO">${TransactionScreenStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:27.858" starttime="20151110 16:59:22.581"></status>
</kw>
<kw name="Get Messages" library="common">
<assign>
<var>${messageDetails}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 16:59:28.858" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 16:59:28.858" starttime="20151110 16:59:27.858"></status>
</kw>
<kw name="Get Value By Row And Column" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>24</arg>
<arg>1</arg>
<arg>80</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 16:59:28.873" level="INFO">${lastRowData} =                                                                                 </msg>
<status status="PASS" endtime="20151110 16:59:28.873" starttime="20151110 16:59:28.858"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:28.988" html="yes" level="INFO">&lt;a href="screenshot_13.jpg"&gt;&lt;img src="screenshot_13.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:28.988" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:28.988" starttime="20151110 16:59:28.873"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastRowData.strip()}</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 16:59:28.988" level="INFO">${lastRowData} = </msg>
<status status="PASS" endtime="20151110 16:59:28.988" starttime="20151110 16:59:28.988"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lastRowData}</arg>
<arg>¦</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 16:59:28.993" level="INFO">${tempList} = [u'']</msg>
<status status="PASS" endtime="20151110 16:59:28.993" starttime="20151110 16:59:28.988"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:28.993" starttime="20151110 16:59:28.993"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<msg timestamp="20151110 16:59:28.993" level="INFO">List is empty.</msg>
<status status="PASS" endtime="20151110 16:59:28.993" starttime="20151110 16:59:28.993"></status>
</kw>
<msg timestamp="20151110 16:59:28.993" level="INFO">${messageDetails} = []</msg>
<status status="PASS" endtime="20151110 16:59:28.993" starttime="20151110 16:59:27.858"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${TransactionScreenStatus}'=='False' and '${expInwardScreenStatus}'=='False'</arg>
</arguments>
<assign>
<var>${condition1}</var>
</assign>
<msg timestamp="20151110 16:59:28.993" level="INFO">${condition1} = False</msg>
<status status="PASS" endtime="20151110 16:59:28.998" starttime="20151110 16:59:28.993"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${TransactionScreenStatus}'=='False' and '${expInwardScreenStatus}'=='True'</arg>
</arguments>
<assign>
<var>${condition2}</var>
</assign>
<msg timestamp="20151110 16:59:28.998" level="INFO">${condition2} = False</msg>
<status status="PASS" endtime="20151110 16:59:28.998" starttime="20151110 16:59:28.998"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${TransactionScreenStatus}'=='True' and '${expInwardScreenStatus}'=='False'</arg>
</arguments>
<assign>
<var>${condition3}</var>
</assign>
<msg timestamp="20151110 16:59:28.998" level="INFO">${condition3} = False</msg>
<status status="PASS" endtime="20151110 16:59:28.998" starttime="20151110 16:59:28.998"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Set Test Message</arg>
<arg>INFO:For ${Recordvalue}, Inward Transaction Type selection was failed. Error Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.003" starttime="20151110 16:59:29.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.003" starttime="20151110 16:59:29.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Wait For Text</arg>
<arg>IO Module</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.003" starttime="20151110 16:59:29.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.003" starttime="20151110 16:59:29.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>Inward Transaction Type selection was failed. Error Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.003" starttime="20151110 16:59:29.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.003" starttime="20151110 16:59:29.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>ERROR: For ${Recordvalue}, Inward Transaction Type selection was failed. Error Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.003" starttime="20151110 16:59:29.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.003" starttime="20151110 16:59:29.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Wait For Text</arg>
<arg>IO Module</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.003" starttime="20151110 16:59:29.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.003" starttime="20151110 16:59:29.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>Inward Transaction Type selection was failed. Error Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.008" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.008" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>ERROR: For ${Recordvalue}, Accepted Invalid data and navigated TO inward creation screen.</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.008" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.008" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Wait For Text</arg>
<arg>Department</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.008" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.008" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Wait For Text</arg>
<arg>IO Module</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.008" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.008" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>Accepted Invalid data and navigated TO inward creation screen.</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.008" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.008" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Create New Inward Transaction" library="inwardtransactions">
<arguments>
<arg>${Inwarddetails}</arg>
</arguments>
<assign>
<var>${CreationStatus}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>False</arg>
</arguments>
<assign>
<var>${KWStatus}</var>
</assign>
<msg timestamp="20151110 16:59:29.013" level="INFO">${KWStatus} = False</msg>
<status status="PASS" endtime="20151110 16:59:29.013" starttime="20151110 16:59:29.013"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Inward Transaction Details Create</arg>
<arg>${TimeOut}</arg>
</arguments>
<assign>
<var>${InwardScreenStatus}</var>
</assign>
<msg timestamp="20151110 16:59:29.018" level="INFO">${InwardScreenStatus} = True</msg>
<status status="PASS" endtime="20151110 16:59:29.018" starttime="20151110 16:59:29.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${InwardScreenStatus}==False</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.023" starttime="20151110 16:59:29.018"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>RecordNumber</arg>
</arguments>
<assign>
<var>${Recordvalue}</var>
</assign>
<msg timestamp="20151110 16:59:29.023" level="INFO">${Recordvalue} = Record2</msg>
<status status="PASS" endtime="20151110 16:59:29.023" starttime="20151110 16:59:29.023"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>CntTyp</arg>
</arguments>
<assign>
<var>${CntTypeValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.023" level="INFO">${CntTypeValue} = FRE</msg>
<status status="PASS" endtime="20151110 16:59:29.023" starttime="20151110 16:59:29.023"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Client Name</arg>
</arguments>
<assign>
<var>${CleintNameValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.023" level="INFO">${CleintNameValue} = Vasu</msg>
<status status="PASS" endtime="20151110 16:59:29.023" starttime="20151110 16:59:29.023"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Agent Code</arg>
</arguments>
<assign>
<var>${AgentCodeValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.023" level="INFO">${AgentCodeValue} = 60002124</msg>
<status status="PASS" endtime="20151110 16:59:29.028" starttime="20151110 16:59:29.023"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Premium</arg>
</arguments>
<assign>
<var>${PremiumValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.028" level="INFO">${PremiumValue} = 1</msg>
<status status="PASS" endtime="20151110 16:59:29.028" starttime="20151110 16:59:29.028"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>ColA/C</arg>
</arguments>
<assign>
<var>${ColAccValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.028" level="INFO">${ColAccValue} = Client Suspenses</msg>
<status status="PASS" endtime="20151110 16:59:29.028" starttime="20151110 16:59:29.028"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>PayMth</arg>
</arguments>
<assign>
<var>${PayMthValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.028" level="INFO">${PayMthValue} = Cheque,Cash</msg>
<status status="PASS" endtime="20151110 16:59:29.028" starttime="20151110 16:59:29.028"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>InsNo</arg>
</arguments>
<assign>
<var>${InsNum}</var>
</assign>
<msg timestamp="20151110 16:59:29.033" level="INFO">${InsNum} = 3242334323,</msg>
<status status="PASS" endtime="20151110 16:59:29.033" starttime="20151110 16:59:29.028"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>InstAmt/Dt</arg>
</arguments>
<assign>
<var>${InsAmoutDate}</var>
</assign>
<msg timestamp="20151110 16:59:29.033" level="INFO">${InsAmoutDate} = 1000|04/11/2015,</msg>
<status status="PASS" endtime="20151110 16:59:29.033" starttime="20151110 16:59:29.033"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>MIS Agnt</arg>
</arguments>
<assign>
<var>${MISAgntvalue}</var>
</assign>
<msg timestamp="20151110 16:59:29.033" level="INFO">${MISAgntvalue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.033" starttime="20151110 16:59:29.033"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>DISC %</arg>
</arguments>
<assign>
<var>${DISCValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.033" level="INFO">${DISCValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.033" starttime="20151110 16:59:29.033"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Rate</arg>
</arguments>
<assign>
<var>${RateValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.033" level="INFO">${RateValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.033" starttime="20151110 16:59:29.033"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Ref</arg>
</arguments>
<assign>
<var>${RefValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.038" level="INFO">${RefValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.038" starttime="20151110 16:59:29.033"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Bank Branch</arg>
</arguments>
<assign>
<var>${BankBranchValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.038" level="INFO">${BankBranchValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.038" starttime="20151110 16:59:29.038"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>InsFrm</arg>
</arguments>
<assign>
<var>${INSFrmValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.038" level="INFO">${INSFrmValue} = Demo Purpose</msg>
<status status="PASS" endtime="20151110 16:59:29.038" starttime="20151110 16:59:29.038"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Trn.Status</arg>
</arguments>
<assign>
<var>${TrmStatusValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.038" level="INFO">${TrmStatusValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.038" starttime="20151110 16:59:29.038"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Make/Mdl</arg>
</arguments>
<assign>
<var>${MakeValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.038" level="INFO">${MakeValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.038" starttime="20151110 16:59:29.038"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>CoverNote/Dt</arg>
</arguments>
<assign>
<var>${CoverNTValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.043" level="INFO">${CoverNTValue} = SAMPLENT04/12/2015</msg>
<status status="PASS" endtime="20151110 16:59:29.043" starttime="20151110 16:59:29.038"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Category</arg>
</arguments>
<assign>
<var>${CatergoryValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.043" level="INFO">${CatergoryValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.043" starttime="20151110 16:59:29.043"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Reason</arg>
</arguments>
<assign>
<var>${ReasonValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.043" level="INFO">${ReasonValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.043" starttime="20151110 16:59:29.043"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Pay No</arg>
</arguments>
<assign>
<var>${PayValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.043" level="INFO">${PayValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.043" starttime="20151110 16:59:29.043"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>LeadPolNo</arg>
</arguments>
<assign>
<var>${LeadPolValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.048" level="INFO">${LeadPolValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.048" starttime="20151110 16:59:29.043"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Initiator</arg>
</arguments>
<assign>
<var>${IntiatorValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.048" level="INFO">${IntiatorValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.048" starttime="20151110 16:59:29.048"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Disc Cat</arg>
</arguments>
<assign>
<var>${DiscCatvalue}</var>
</assign>
<msg timestamp="20151110 16:59:29.048" level="INFO">${DiscCatvalue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.048" starttime="20151110 16:59:29.048"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Disc Resolutn Dt</arg>
</arguments>
<assign>
<var>${DiscResValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.048" level="INFO">${DiscResValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.048" starttime="20151110 16:59:29.048"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Disc/Rfnd Letter Typ</arg>
</arguments>
<assign>
<var>${DiscValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.048" level="INFO">${DiscValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.048" starttime="20151110 16:59:29.048"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Disc Reason</arg>
</arguments>
<assign>
<var>${DiscReasonValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.048" level="INFO">${DiscReasonValue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.053" starttime="20151110 16:59:29.048"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Remarks</arg>
</arguments>
<assign>
<var>${RemarksValue}</var>
</assign>
<msg timestamp="20151110 16:59:29.053" level="INFO">${RemarksValue} = testing Remarks2</msg>
<status status="PASS" endtime="20151110 16:59:29.053" starttime="20151110 16:59:29.053"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>IDV</arg>
</arguments>
<assign>
<var>${IDVvalue}</var>
</assign>
<msg timestamp="20151110 16:59:29.053" level="INFO">${IDVvalue} = NA</msg>
<status status="PASS" endtime="20151110 16:59:29.053" starttime="20151110 16:59:29.053"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:29.123" html="yes" level="INFO">&lt;a href="screenshot_14.jpg"&gt;&lt;img src="screenshot_14.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:29.123" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:29.123" starttime="20151110 16:59:29.053"></status>
</kw>
<kw name="Get Value By Field Name" library="Insurance">
<doc>To capture the Field Text by the given Field Label</doc>
<arguments>
<arg>User Id:</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${ActualUserID}</var>
</assign>
<msg timestamp="20151110 16:59:29.183" level="INFO">${ActualUserID} = TENX01    </msg>
<status status="PASS" endtime="20151110 16:59:29.183" starttime="20151110 16:59:29.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ActualUserID.strip()}'!='${GlobalUserName}'</arg>
<arg>Set Test Message</arg>
<arg>Expected User ID: ${GlobalUserName} is equal to Logged In UserID: ${ActualUserID} \n</arg>
<arg>append=True</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.188" starttime="20151110 16:59:29.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${ActualUserID.strip()}'!='${GlobalUserName}'</arg>
<arg>Return From Keyword If</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:29.188" starttime="20151110 16:59:29.188"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>CntTyp</arg>
<arg>${CntTypeValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:30.203" starttime="20151110 16:59:29.188"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Client Name</arg>
<arg>${CleintNameValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:31.239" starttime="20151110 16:59:30.203"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Agent Code</arg>
<arg>${AgentCodeValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:32.264" starttime="20151110 16:59:31.239"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Premium</arg>
<arg>${PremiumValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:33.304" starttime="20151110 16:59:32.264"></status>
</kw>
<kw name="Select Item From Search Table By Field Name" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>ColA/C</arg>
<arg>${ColAccValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:37.401" starttime="20151110 16:59:33.304"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${PayMthValue}</arg>
<arg>,</arg>
</arguments>
<assign>
<var>${PayMethodList}</var>
</assign>
<msg timestamp="20151110 16:59:37.406" level="INFO">${PayMethodList} = [u'Cheque', u'Cash']</msg>
<status status="PASS" endtime="20151110 16:59:37.406" starttime="20151110 16:59:37.401"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${InsNum}</arg>
<arg>,</arg>
</arguments>
<assign>
<var>${InsNumberList}</var>
</assign>
<msg timestamp="20151110 16:59:37.406" level="INFO">${InsNumberList} = [u'3242334323', u'']</msg>
<status status="PASS" endtime="20151110 16:59:37.406" starttime="20151110 16:59:37.406"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${InsAmoutDate}</arg>
<arg>,</arg>
</arguments>
<assign>
<var>${InsAmountDateList}</var>
</assign>
<msg timestamp="20151110 16:59:37.406" level="INFO">${InsAmountDateList} = [u'1000|04/11/2015', u'']</msg>
<status status="PASS" endtime="20151110 16:59:37.406" starttime="20151110 16:59:37.406"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${PayMethodList}</arg>
</arguments>
<assign>
<var>${iSize}</var>
</assign>
<msg timestamp="20151110 16:59:37.411" level="INFO">Length is 2</msg>
<msg timestamp="20151110 16:59:37.411" level="INFO">${iSize} = 2</msg>
<status status="PASS" endtime="20151110 16:59:37.411" starttime="20151110 16:59:37.406"></status>
</kw>
<kw type="for" name="${ivalue} IN RANGE [ 0 | ${iSize} ]">
<kw type="foritem" name="${ivalue} = 0">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ivalue}+1</arg>
</arguments>
<assign>
<var>${fieldInstance}</var>
</assign>
<msg timestamp="20151110 16:59:37.411" level="INFO">${fieldInstance} = 1</msg>
<status status="PASS" endtime="20151110 16:59:37.416" starttime="20151110 16:59:37.411"></status>
</kw>
<kw name="Select Item From Search Table By Field Name" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>PayMth</arg>
<arg>@{PayMethodList}[${ivalue}]</arg>
<arg>${fieldInstance}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:41.513" starttime="20151110 16:59:37.416"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[ENTER]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:41.533" starttime="20151110 16:59:41.513"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20151110 16:59:43.539" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20151110 16:59:43.539" starttime="20151110 16:59:41.533"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>InsNo</arg>
<arg>@{InsNumberList}[${ivalue}]</arg>
<arg>${fieldInstance}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:44.554" starttime="20151110 16:59:43.539"></status>
</kw>
<kw name="Enter Text For Multiple Fileds" library="common">
<arguments>
<arg>InstAmt/Dt</arg>
<arg>@{InsAmountDateList}[${ivalue}]</arg>
<arg>${fieldInstance}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>|</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 16:59:44.559" level="INFO">${tempList} = [u'1000', u'04/11/2015']</msg>
<status status="PASS" endtime="20151110 16:59:44.559" starttime="20151110 16:59:44.554"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>${FieldName}</arg>
<arg>@{tempList}[0]</arg>
<arg>${instance}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:45.579" starttime="20151110 16:59:44.559"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<assign>
<var>${iSize}</var>
</assign>
<msg timestamp="20151110 16:59:45.584" level="INFO">Length is 2</msg>
<msg timestamp="20151110 16:59:45.584" level="INFO">${iSize} = 2</msg>
<status status="PASS" endtime="20151110 16:59:45.584" starttime="20151110 16:59:45.579"></status>
</kw>
<kw type="for" name="${Index} IN RANGE [ 1 | ${iSize} ]">
<kw type="foritem" name="${Index} = 1">
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[TAB]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:45.599" starttime="20151110 16:59:45.584"></status>
</kw>
<kw name="Enter Text" library="Insurance">
<doc>This keyword will enter text svalue at current position</doc>
<arguments>
<arg>@{tempList}[${Index}]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:45.614" starttime="20151110 16:59:45.599"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20151110 16:59:47.620" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20151110 16:59:47.620" starttime="20151110 16:59:45.614"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:47.620" starttime="20151110 16:59:45.584"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:47.620" starttime="20151110 16:59:45.584"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:47.620" starttime="20151110 16:59:44.554"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:47.620" starttime="20151110 16:59:37.411"></status>
</kw>
<kw type="foritem" name="${ivalue} = 1">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${ivalue}+1</arg>
</arguments>
<assign>
<var>${fieldInstance}</var>
</assign>
<msg timestamp="20151110 16:59:47.630" level="INFO">${fieldInstance} = 2</msg>
<status status="PASS" endtime="20151110 16:59:47.630" starttime="20151110 16:59:47.620"></status>
</kw>
<kw name="Select Item From Search Table By Field Name" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>PayMth</arg>
<arg>@{PayMethodList}[${ivalue}]</arg>
<arg>${fieldInstance}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:51.766" starttime="20151110 16:59:47.630"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[ENTER]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:51.781" starttime="20151110 16:59:51.766"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2</arg>
</arguments>
<msg timestamp="20151110 16:59:53.787" level="INFO">Slept 2 seconds</msg>
<status status="PASS" endtime="20151110 16:59:53.787" starttime="20151110 16:59:51.781"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>InsNo</arg>
<arg>@{InsNumberList}[${ivalue}]</arg>
<arg>${fieldInstance}</arg>
</arguments>
<msg timestamp="20151110 16:59:54.798" level="INFO">No value in Sheet</msg>
<status status="PASS" endtime="20151110 16:59:54.798" starttime="20151110 16:59:53.787"></status>
</kw>
<kw name="Enter Text For Multiple Fileds" library="common">
<arguments>
<arg>InstAmt/Dt</arg>
<arg>@{InsAmountDateList}[${ivalue}]</arg>
<arg>${fieldInstance}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${Value}</arg>
<arg>|</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 16:59:54.803" level="INFO">${tempList} = [u'']</msg>
<status status="PASS" endtime="20151110 16:59:54.803" starttime="20151110 16:59:54.803"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>${FieldName}</arg>
<arg>@{tempList}[0]</arg>
<arg>${instance}</arg>
</arguments>
<msg timestamp="20151110 16:59:55.823" level="INFO">No value in Sheet</msg>
<status status="PASS" endtime="20151110 16:59:55.823" starttime="20151110 16:59:54.803"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<assign>
<var>${iSize}</var>
</assign>
<msg timestamp="20151110 16:59:55.828" level="INFO">Length is 1</msg>
<msg timestamp="20151110 16:59:55.828" level="INFO">${iSize} = 1</msg>
<status status="PASS" endtime="20151110 16:59:55.828" starttime="20151110 16:59:55.823"></status>
</kw>
<kw type="for" name="${Index} IN RANGE [ 1 | ${iSize} ]">
<status status="PASS" endtime="20151110 16:59:55.828" starttime="20151110 16:59:55.828"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:55.833" starttime="20151110 16:59:54.798"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:55.833" starttime="20151110 16:59:47.620"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:55.833" starttime="20151110 16:59:37.411"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>MIS Agnt</arg>
<arg>${MISAgntvalue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:55.848" starttime="20151110 16:59:55.833"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>DISC %</arg>
<arg>${DISCValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:55.858" starttime="20151110 16:59:55.848"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Rate</arg>
<arg>${RateValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:55.868" starttime="20151110 16:59:55.858"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Ref</arg>
<arg>${RefValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:55.878" starttime="20151110 16:59:55.868"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Bank Branch</arg>
<arg>${BankBranchValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:55.883" starttime="20151110 16:59:55.878"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>InsFrm</arg>
<arg>${INSFrmValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:56.898" starttime="20151110 16:59:55.883"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:56.978" html="yes" level="INFO">&lt;a href="screenshot_15.jpg"&gt;&lt;img src="screenshot_15.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:56.978" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:56.978" starttime="20151110 16:59:56.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${TrmStatusValue}'!=''</arg>
<arg>Select Item From Search Table By Field Name</arg>
<arg>Trn.Status</arg>
<arg>${TrmStatusValue}</arg>
</arguments>
<kw name="Select Item From Search Table By Field Name" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>Trn.Status</arg>
<arg>${TrmStatusValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:56.988" starttime="20151110 16:59:56.983"></status>
</kw>
<status status="PASS" endtime="20151110 16:59:56.988" starttime="20151110 16:59:56.978"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Make/Mdl</arg>
<arg>${MakeValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:56.988" starttime="20151110 16:59:56.988"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>CoverNote/Dt</arg>
<arg>${CoverNTValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:58.009" starttime="20151110 16:59:56.988"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Category</arg>
<arg>${CatergoryValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:58.029" starttime="20151110 16:59:58.009"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Reason</arg>
<arg>${ReasonValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:58.039" starttime="20151110 16:59:58.029"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Pay No</arg>
<arg>${PayValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:58.049" starttime="20151110 16:59:58.044"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>LeadPolNo</arg>
<arg>${LeadPolValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:58.064" starttime="20151110 16:59:58.054"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Initiator</arg>
<arg>${IntiatorValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:58.069" starttime="20151110 16:59:58.064"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Disc Cat</arg>
<arg>${DiscCatvalue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:58.074" starttime="20151110 16:59:58.069"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Disc Resolutn Dt</arg>
<arg>${DiscResValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:58.079" starttime="20151110 16:59:58.074"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Disc/Rfnd Letter Typ</arg>
<arg>${DiscValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:58.084" starttime="20151110 16:59:58.079"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Disc Reason</arg>
<arg>${DiscReasonValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:58.089" starttime="20151110 16:59:58.084"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Remarks</arg>
<arg>${RemarksValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:59.104" starttime="20151110 16:59:58.089"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>IDV</arg>
<arg>${IDVvalue}</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:59.114" starttime="20151110 16:59:59.104"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 16:59:59.184" html="yes" level="INFO">&lt;a href="screenshot_16.jpg"&gt;&lt;img src="screenshot_16.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 16:59:59.184" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 16:59:59.184" starttime="20151110 16:59:59.114"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[ENTER]</arg>
</arguments>
<status status="PASS" endtime="20151110 16:59:59.189" starttime="20151110 16:59:59.184"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Action</arg>
</arguments>
<assign>
<var>${bAStatus}</var>
</assign>
<msg timestamp="20151110 17:00:00.189" level="INFO">${bAStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:00.189" starttime="20151110 16:59:59.189"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Branch</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${bBStatus}</var>
</assign>
<msg timestamp="20151110 17:00:00.194" level="INFO">${bBStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:00.194" starttime="20151110 17:00:00.189"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Department</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${bDStatus}</var>
</assign>
<msg timestamp="20151110 17:00:00.214" level="INFO">${bDStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:00.214" starttime="20151110 17:00:00.199"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${bAStatus} and ${bBStatus} and ${bDStatus}</arg>
</arguments>
<assign>
<var>${bStatus}</var>
</assign>
<msg timestamp="20151110 17:00:00.224" level="INFO">${bStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:00.224" starttime="20151110 17:00:00.214"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${bStatus}</arg>
</arguments>
<assign>
<var>${KWStatus}</var>
</assign>
<msg timestamp="20151110 17:00:00.229" level="INFO">${KWStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:00.229" starttime="20151110 17:00:00.224"></status>
</kw>
<msg timestamp="20151110 17:00:00.229" level="INFO">${CreationStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:00.229" starttime="20151110 16:59:29.008"></status>
</kw>
<kw name="Get Messages" library="common">
<assign>
<var>${messageDetails}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 17:00:01.229" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:01.229" starttime="20151110 17:00:00.229"></status>
</kw>
<kw name="Get Value By Row And Column" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>24</arg>
<arg>1</arg>
<arg>80</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 17:00:01.234" level="INFO">${lastRowData} =  IO Number :- 10/PP/A00012253 Application No :- B0031787                        </msg>
<status status="PASS" endtime="20151110 17:00:01.234" starttime="20151110 17:00:01.229"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 17:00:01.320" html="yes" level="INFO">&lt;a href="screenshot_17.jpg"&gt;&lt;img src="screenshot_17.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 17:00:01.320" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 17:00:01.320" starttime="20151110 17:00:01.234"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastRowData.strip()}</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 17:00:01.325" level="INFO">${lastRowData} = IO Number :- 10/PP/A00012253 Application No :- B0031787</msg>
<status status="PASS" endtime="20151110 17:00:01.325" starttime="20151110 17:00:01.325"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lastRowData}</arg>
<arg>¦</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 17:00:01.325" level="INFO">${tempList} = [u'IO Number :- 10/PP/A00012253 Application No :- B0031787']</msg>
<status status="PASS" endtime="20151110 17:00:01.325" starttime="20151110 17:00:01.325"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.325" starttime="20151110 17:00:01.325"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<msg timestamp="20151110 17:00:01.330" level="INFO">List has one item:
IO Number :- 10/PP/A00012253 Application No :- B0031787</msg>
<status status="PASS" endtime="20151110 17:00:01.330" starttime="20151110 17:00:01.330"></status>
</kw>
<msg timestamp="20151110 17:00:01.330" level="INFO">${messageDetails} = [u'IO Number :- 10/PP/A00012253 Application No :- B0031787']</msg>
<status status="PASS" endtime="20151110 17:00:01.330" starttime="20151110 17:00:00.229"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${expInwardCreationStatus}'=='False' and '${CreationStatus}'=='False'</arg>
</arguments>
<assign>
<var>${condition1}</var>
</assign>
<msg timestamp="20151110 17:00:01.330" level="INFO">${condition1} = False</msg>
<status status="PASS" endtime="20151110 17:00:01.330" starttime="20151110 17:00:01.330"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${expInwardCreationStatus}'=='True' and '${CreationStatus}'=='False'</arg>
</arguments>
<assign>
<var>${condition2}</var>
</assign>
<msg timestamp="20151110 17:00:01.335" level="INFO">${condition2} = False</msg>
<status status="PASS" endtime="20151110 17:00:01.335" starttime="20151110 17:00:01.330"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${expInwardCreationStatus}'=='False' and '${CreationStatus}'=='True'</arg>
</arguments>
<assign>
<var>${condition3}</var>
</assign>
<msg timestamp="20151110 17:00:01.335" level="INFO">${condition3} = False</msg>
<status status="PASS" endtime="20151110 17:00:01.335" starttime="20151110 17:00:01.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${expInwardCreationStatus}'=='True' and '${CreationStatus}'=='True'</arg>
<arg>Set Test Message</arg>
<arg>INFO: For ${Recordvalue}, Inward Transaction got created, Transaction Details: ${messageDetails} \n</arg>
<arg>append=True</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>INFO: For ${Recordvalue}, Inward Transaction got created, Transaction Details: ${messageDetails} \n</arg>
<arg>append=True</arg>
</arguments>
<msg timestamp="20151110 17:00:01.340" level="INFO">Set test message to:
INFO:For Record1, Inward Transaction Type selection was failed. Error Details: [u'Invalid code            '] INFO: For Record2, Inward Transaction got created, Transaction Details: [u'IO Number :- 10/PP/A00012253 Application No :- B0031787'] 
</msg>
<status status="PASS" endtime="20151110 17:00:01.340" starttime="20151110 17:00:01.340"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:01.340" starttime="20151110 17:00:01.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.340" starttime="20151110 17:00:01.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Wait For Text</arg>
<arg>Department</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.340" starttime="20151110 17:00:01.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.340" starttime="20151110 17:00:01.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Wait For Text</arg>
<arg>IO Module</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.340" starttime="20151110 17:00:01.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.340" starttime="20151110 17:00:01.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>Inward Transaction got created, Transaction Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>ERROR: For ${Recordvalue}, Inward Transaction creation failed. Error Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Wait For Text</arg>
<arg>Department</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Wait For Text</arg>
<arg>IO Module</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>Inward Transaction creation failed. Error Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>ERROR: For ${Recordvalue}, Inward Transaction Created with Invalid data. Inward Transaction Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.345" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Wait For Text</arg>
<arg>Department</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.350" starttime="20151110 17:00:01.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.350" starttime="20151110 17:00:01.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Wait For Text</arg>
<arg>IO Module</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.350" starttime="20151110 17:00:01.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.350" starttime="20151110 17:00:01.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>Inward Transaction Created with Invalid data. Inward Transaction Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.350" starttime="20151110 17:00:01.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:01.350" starttime="20151110 17:00:01.350"></status>
</kw>
<kw name="Get Inward and Application Details" library="common">
<assign>
<var>${newInwardDetails}</var>
</assign>
<kw name="Get Messages" library="common">
<assign>
<var>${messages}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 17:00:02.350" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:02.350" starttime="20151110 17:00:01.350"></status>
</kw>
<kw name="Get Value By Row And Column" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>24</arg>
<arg>1</arg>
<arg>80</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 17:00:02.360" level="INFO">${lastRowData} =  IO Number :- 10/PP/A00012253 Application No :- B0031787                        </msg>
<status status="PASS" endtime="20151110 17:00:02.360" starttime="20151110 17:00:02.350"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 17:00:02.450" html="yes" level="INFO">&lt;a href="screenshot_18.jpg"&gt;&lt;img src="screenshot_18.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 17:00:02.450" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 17:00:02.450" starttime="20151110 17:00:02.360"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastRowData.strip()}</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 17:00:02.450" level="INFO">${lastRowData} = IO Number :- 10/PP/A00012253 Application No :- B0031787</msg>
<status status="PASS" endtime="20151110 17:00:02.450" starttime="20151110 17:00:02.450"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lastRowData}</arg>
<arg>¦</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 17:00:02.450" level="INFO">${tempList} = [u'IO Number :- 10/PP/A00012253 Application No :- B0031787']</msg>
<status status="PASS" endtime="20151110 17:00:02.450" starttime="20151110 17:00:02.450"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:02.450" starttime="20151110 17:00:02.450"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<msg timestamp="20151110 17:00:02.450" level="INFO">List has one item:
IO Number :- 10/PP/A00012253 Application No :- B0031787</msg>
<status status="PASS" endtime="20151110 17:00:02.450" starttime="20151110 17:00:02.450"></status>
</kw>
<msg timestamp="20151110 17:00:02.455" level="INFO">${messages} = [u'IO Number :- 10/PP/A00012253 Application No :- B0031787']</msg>
<status status="PASS" endtime="20151110 17:00:02.455" starttime="20151110 17:00:01.350"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{messages}[0]</arg>
</arguments>
<assign>
<var>${messages}</var>
</assign>
<msg timestamp="20151110 17:00:02.455" level="INFO">${messages} = IO Number :- 10/PP/A00012253 Application No :- B0031787</msg>
<status status="PASS" endtime="20151110 17:00:02.455" starttime="20151110 17:00:02.455"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${messages.strip()}</arg>
</arguments>
<assign>
<var>${messages}</var>
</assign>
<msg timestamp="20151110 17:00:02.455" level="INFO">${messages} = IO Number :- 10/PP/A00012253 Application No :- B0031787</msg>
<status status="PASS" endtime="20151110 17:00:02.455" starttime="20151110 17:00:02.455"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${messages}</arg>
<arg>IO Number :-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${messages}</var>
</assign>
<msg timestamp="20151110 17:00:02.455" level="INFO">${messages} =  10/PP/A00012253 Application No :- B0031787</msg>
<status status="PASS" endtime="20151110 17:00:02.455" starttime="20151110 17:00:02.455"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${messages}</arg>
<arg>Application No :-</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${messages}</var>
</assign>
<msg timestamp="20151110 17:00:02.460" level="INFO">${messages} =  10/PP/A00012253  B0031787</msg>
<status status="PASS" endtime="20151110 17:00:02.460" starttime="20151110 17:00:02.455"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${messages.strip()}</arg>
</arguments>
<assign>
<var>${messages}</var>
</assign>
<msg timestamp="20151110 17:00:02.460" level="INFO">${messages} = 10/PP/A00012253  B0031787</msg>
<status status="PASS" endtime="20151110 17:00:02.460" starttime="20151110 17:00:02.460"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${messages}</arg>
<arg>${SPACE}</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 17:00:02.460" level="INFO">${tempList} = [u'10/PP/A00012253', u'', u'B0031787']</msg>
<status status="PASS" endtime="20151110 17:00:02.460" starttime="20151110 17:00:02.460"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:02.465" starttime="20151110 17:00:02.460"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{tempList}[0]</arg>
</arguments>
<assign>
<var>${NewInwardNo}</var>
</assign>
<msg timestamp="20151110 17:00:02.465" level="INFO">${NewInwardNo} = 10/PP/A00012253</msg>
<status status="PASS" endtime="20151110 17:00:02.465" starttime="20151110 17:00:02.465"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>@{tempList}[1]</arg>
</arguments>
<assign>
<var>${NewApplicationNo}</var>
</assign>
<msg timestamp="20151110 17:00:02.465" level="INFO">${NewApplicationNo} = B0031787</msg>
<status status="PASS" endtime="20151110 17:00:02.465" starttime="20151110 17:00:02.465"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${NewInwardNo.strip()}</arg>
</arguments>
<assign>
<var>${NewInwardNo}</var>
</assign>
<msg timestamp="20151110 17:00:02.465" level="INFO">${NewInwardNo} = 10/PP/A00012253</msg>
<status status="PASS" endtime="20151110 17:00:02.465" starttime="20151110 17:00:02.465"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${NewApplicationNo.strip()}</arg>
</arguments>
<assign>
<var>${NewApplicationNo}</var>
</assign>
<msg timestamp="20151110 17:00:02.470" level="INFO">${NewApplicationNo} = B0031787</msg>
<status status="PASS" endtime="20151110 17:00:02.470" starttime="20151110 17:00:02.465"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${NewInwardNo}</arg>
<arg>${NewApplicationNo}</arg>
</arguments>
<assign>
<var>${Details}</var>
</assign>
<msg timestamp="20151110 17:00:02.470" level="INFO">${Details} = [u'10/PP/A00012253', u'B0031787']</msg>
<status status="PASS" endtime="20151110 17:00:02.470" starttime="20151110 17:00:02.470"></status>
</kw>
<msg timestamp="20151110 17:00:02.470" level="INFO">${newInwardDetails} = [u'10/PP/A00012253', u'B0031787']</msg>
<status status="PASS" endtime="20151110 17:00:02.470" starttime="20151110 17:00:01.350"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Inw No</arg>
<arg>@{newInwardDetails}[0]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:02.470" starttime="20151110 17:00:02.470"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>Apln No</arg>
<arg>@{newInwardDetails}[1]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:02.470" starttime="20151110 17:00:02.470"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Department</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:02.475" starttime="20151110 17:00:02.470"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:02.485" starttime="20151110 17:00:02.475"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>IO Module</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:03.490" starttime="20151110 17:00:02.485"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:03.505" starttime="20151110 17:00:03.490"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Underwriting</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:04.531" starttime="20151110 17:00:03.510"></status>
</kw>
<kw name="Select Menu Item" library="Insurance">
<doc>To Select the Module or Sub module.</doc>
<arguments>
<arg>Underwriting</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:04.561" starttime="20151110 17:00:04.531"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>New Business</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:05.571" starttime="20151110 17:00:04.566"></status>
</kw>
<kw name="Select Menu Item" library="Insurance">
<doc>To Select the Module or Sub module.</doc>
<arguments>
<arg>New Business</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:05.606" starttime="20151110 17:00:05.576"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>ExpectedPolicyMenuStatus</arg>
</arguments>
<assign>
<var>${expPolicyMenuStatus}</var>
</assign>
<msg timestamp="20151110 17:00:05.611" level="INFO">${expPolicyMenuStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:05.611" starttime="20151110 17:00:05.611"></status>
</kw>
<kw name="Select From Policy Submenu" library="inwardtransactions">
<arguments>
<arg>${EMPTY}</arg>
<arg>FRE</arg>
<arg>${EMPTY}</arg>
<arg>A</arg>
</arguments>
<assign>
<var>${menuSelectionStatus}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>False</arg>
</arguments>
<assign>
<var>${KWStatus}</var>
</assign>
<msg timestamp="20151110 17:00:05.611" level="INFO">${KWStatus} = False</msg>
<status status="PASS" endtime="20151110 17:00:05.611" starttime="20151110 17:00:05.611"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>New Policy Submenu</arg>
<arg>${TimeOut}</arg>
</arguments>
<assign>
<var>${InwardScreenStatus}</var>
</assign>
<msg timestamp="20151110 17:00:06.627" level="INFO">${InwardScreenStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:06.627" starttime="20151110 17:00:05.611"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${InwardScreenStatus}==False</arg>
<arg>Return From Keyword</arg>
<arg>${InwardScreenStatus}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:06.632" starttime="20151110 17:00:06.627"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Policy Number</arg>
<arg>${Policynumber}</arg>
</arguments>
<msg timestamp="20151110 17:00:07.657" level="INFO">No value in Sheet</msg>
<status status="PASS" endtime="20151110 17:00:07.657" starttime="20151110 17:00:06.632"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Policy Type</arg>
<arg>${PolicyType}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:08.687" starttime="20151110 17:00:07.657"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Effective Date</arg>
<arg>${EffDate}</arg>
</arguments>
<msg timestamp="20151110 17:00:09.723" level="INFO">No value in Sheet</msg>
<status status="PASS" endtime="20151110 17:00:09.723" starttime="20151110 17:00:08.692"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Action</arg>
<arg>${Action}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:10.748" starttime="20151110 17:00:09.723"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 17:00:10.858" html="yes" level="INFO">&lt;a href="screenshot_19.jpg"&gt;&lt;img src="screenshot_19.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 17:00:10.858" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 17:00:10.858" starttime="20151110 17:00:10.753"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:10.863" starttime="20151110 17:00:10.858"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>New Business</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 17:00:11.863" level="INFO">${kwStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:11.863" starttime="20151110 17:00:10.863"></status>
</kw>
<msg timestamp="20151110 17:00:11.863" level="INFO">${menuSelectionStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:11.863" starttime="20151110 17:00:05.611"></status>
</kw>
<kw name="Get Messages" library="common">
<assign>
<var>${messageDetails}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 17:00:12.869" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:12.869" starttime="20151110 17:00:11.868"></status>
</kw>
<kw name="Get Value By Row And Column" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>24</arg>
<arg>1</arg>
<arg>80</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 17:00:12.884" level="INFO">${lastRowData} =                                                                                 </msg>
<status status="PASS" endtime="20151110 17:00:12.884" starttime="20151110 17:00:12.869"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 17:00:12.969" html="yes" level="INFO">&lt;a href="screenshot_20.jpg"&gt;&lt;img src="screenshot_20.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 17:00:12.969" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 17:00:12.969" starttime="20151110 17:00:12.884"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastRowData.strip()}</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 17:00:12.969" level="INFO">${lastRowData} = </msg>
<status status="PASS" endtime="20151110 17:00:12.969" starttime="20151110 17:00:12.969"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lastRowData}</arg>
<arg>¦</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 17:00:12.974" level="INFO">${tempList} = [u'']</msg>
<status status="PASS" endtime="20151110 17:00:12.974" starttime="20151110 17:00:12.969"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.974" starttime="20151110 17:00:12.974"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<msg timestamp="20151110 17:00:12.974" level="INFO">List is empty.</msg>
<status status="PASS" endtime="20151110 17:00:12.974" starttime="20151110 17:00:12.974"></status>
</kw>
<msg timestamp="20151110 17:00:12.974" level="INFO">${messageDetails} = []</msg>
<status status="PASS" endtime="20151110 17:00:12.974" starttime="20151110 17:00:11.863"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${expPolicyMenuStatus}'=='False' and '${menuSelectionStatus}'=='False'</arg>
</arguments>
<assign>
<var>${condition1}</var>
</assign>
<msg timestamp="20151110 17:00:12.974" level="INFO">${condition1} = False</msg>
<status status="PASS" endtime="20151110 17:00:12.974" starttime="20151110 17:00:12.974"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${expPolicyMenuStatus}'=='True' and '${menuSelectionStatus}'=='False'</arg>
</arguments>
<assign>
<var>${condition2}</var>
</assign>
<msg timestamp="20151110 17:00:12.979" level="INFO">${condition2} = False</msg>
<status status="PASS" endtime="20151110 17:00:12.979" starttime="20151110 17:00:12.974"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${expPolicyMenuStatus}'=='False' and '${menuSelectionStatus}'=='True'</arg>
</arguments>
<assign>
<var>${condition3}</var>
</assign>
<msg timestamp="20151110 17:00:12.979" level="INFO">${condition3} = False</msg>
<status status="PASS" endtime="20151110 17:00:12.979" starttime="20151110 17:00:12.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.979" starttime="20151110 17:00:12.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Wait For Text</arg>
<arg>New Business</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.984" starttime="20151110 17:00:12.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.984" starttime="20151110 17:00:12.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>Inward Transaction creation failed. Error Details: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.984" starttime="20151110 17:00:12.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.984" starttime="20151110 17:00:12.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>ERROR: For ${Recordvalue},selection of Policy SubMenu was failed. Errors: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.984" starttime="20151110 17:00:12.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.984" starttime="20151110 17:00:12.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Wait For Text</arg>
<arg>New Business</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.984" starttime="20151110 17:00:12.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.984" starttime="20151110 17:00:12.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>selection of Policy SubMenu was failed. Errors: ${messageDetails}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.984" starttime="20151110 17:00:12.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition2}</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.984" starttime="20151110 17:00:12.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>ERROR: For ${Recordvalue},Accepted wrong data and Selected the Policy Menu.</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.989" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.989" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Wait For Text</arg>
<arg>New Policy Submenu</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.989" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.989" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Wait For Text</arg>
<arg>New Business</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.989" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Fail</arg>
<arg>Accepted wrong data and Selected the Policy Menu.</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.989" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.989" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition3}</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.989" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Create New Policy" library="inwardtransactions">
<arguments>
<arg>${Inwarddetails}</arg>
</arguments>
<assign>
<var>${npCrtStatus}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>False</arg>
</arguments>
<assign>
<var>${KWStatus}</var>
</assign>
<msg timestamp="20151110 17:00:12.989" level="INFO">${KWStatus} = False</msg>
<status status="PASS" endtime="20151110 17:00:12.989" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>New Business</arg>
<arg>${TimeOut}</arg>
</arguments>
<assign>
<var>${policyScreenStatus}</var>
</assign>
<msg timestamp="20151110 17:00:12.994" level="INFO">${policyScreenStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:12.994" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${policyScreenStatus}==False</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:12.999" starttime="20151110 17:00:12.994"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${PolicyDetails}</arg>
<arg>Branch</arg>
</arguments>
<assign>
<var>${Branchalue}</var>
</assign>
<msg timestamp="20151110 17:00:12.999" level="INFO">${Branchalue} = 10</msg>
<status status="PASS" endtime="20151110 17:00:12.999" starttime="20151110 17:00:12.999"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${PolicyDetails}</arg>
<arg>Contract Owner</arg>
</arguments>
<assign>
<var>${ContractValue}</var>
</assign>
<msg timestamp="20151110 17:00:12.999" level="INFO">${ContractValue} = 40077601</msg>
<status status="PASS" endtime="20151110 17:00:12.999" starttime="20151110 17:00:12.999"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${PolicyDetails}</arg>
<arg>Inception</arg>
</arguments>
<assign>
<var>${InceptionValue}</var>
</assign>
<msg timestamp="20151110 17:00:12.999" level="INFO">${InceptionValue} = 05/11/2015</msg>
<status status="PASS" endtime="20151110 17:00:12.999" starttime="20151110 17:00:12.999"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${PolicyDetails}</arg>
<arg>Expiry</arg>
</arguments>
<assign>
<var>${ExpiryValue}</var>
</assign>
<msg timestamp="20151110 17:00:12.999" level="INFO">${ExpiryValue} = 04/11/2016</msg>
<status status="PASS" endtime="20151110 17:00:12.999" starttime="20151110 17:00:12.999"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${PolicyDetails}</arg>
<arg>Agent Code</arg>
</arguments>
<assign>
<var>${AgentCodeValue}</var>
</assign>
<msg timestamp="20151110 17:00:12.999" level="INFO">${AgentCodeValue} = 60002124</msg>
<status status="PASS" endtime="20151110 17:00:12.999" starttime="20151110 17:00:12.999"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${PolicyDetails}</arg>
<arg>Agent Comm Type</arg>
</arguments>
<assign>
<var>${AgentCommValue}</var>
</assign>
<msg timestamp="20151110 17:00:13.004" level="INFO">${AgentCommValue} = Gross Commission</msg>
<status status="PASS" endtime="20151110 17:00:13.004" starttime="20151110 17:00:13.004"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${PolicyDetails}</arg>
<arg>Inw No</arg>
</arguments>
<assign>
<var>${InwardNumberValue}</var>
</assign>
<msg timestamp="20151110 17:00:13.004" level="INFO">${InwardNumberValue} = 10/PP/A00012253</msg>
<status status="PASS" endtime="20151110 17:00:13.004" starttime="20151110 17:00:13.004"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${PolicyDetails}</arg>
<arg>Apln No</arg>
</arguments>
<assign>
<var>${ApplicationNumvalue}</var>
</assign>
<msg timestamp="20151110 17:00:13.004" level="INFO">${ApplicationNumvalue} = B0031787</msg>
<status status="PASS" endtime="20151110 17:00:13.004" starttime="20151110 17:00:13.004"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 17:00:13.094" html="yes" level="INFO">&lt;a href="screenshot_21.jpg"&gt;&lt;img src="screenshot_21.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 17:00:13.094" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 17:00:13.094" starttime="20151110 17:00:13.004"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20151110 17:00:14.094" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:14.094" starttime="20151110 17:00:13.094"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Ser Branch</arg>
<arg>${Branchalue}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:15.124" starttime="20151110 17:00:14.094"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Contract Owner</arg>
<arg>${ContractValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:16.140" starttime="20151110 17:00:15.124"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Inception</arg>
<arg>${InceptionValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:17.155" starttime="20151110 17:00:16.140"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Expiry</arg>
<arg>${ExpiryValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:18.180" starttime="20151110 17:00:17.155"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[Enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:18.195" starttime="20151110 17:00:18.180"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20151110 17:00:19.201" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:19.201" starttime="20151110 17:00:18.195"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Agent</arg>
<arg>${AgentCodeValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:20.226" starttime="20151110 17:00:19.201"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20151110 17:00:21.227" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:21.227" starttime="20151110 17:00:20.226"></status>
</kw>
<kw name="Select Item From Search Table By Field Name" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>Agent Comm Type</arg>
<arg>${AgentCommValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:25.358" starttime="20151110 17:00:21.227"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20151110 17:00:26.363" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:26.363" starttime="20151110 17:00:25.358"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Inw No</arg>
<arg>${InwardNumberValue}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:27.393" starttime="20151110 17:00:26.363"></status>
</kw>
<kw name="Enter Text By Field Name" library="Insurance">
<doc>To enter the text against a field label. The first parameter is mandate and other two are optional.Instance is used in the case of multiple fields with same name.If you want to erase the field value, pass Value as "empty" from your test data.</doc>
<arguments>
<arg>Apln No</arg>
<arg>${ApplicationNumvalue}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:28.424" starttime="20151110 17:00:27.398"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[Enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:28.439" starttime="20151110 17:00:28.424"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20151110 17:00:29.439" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:29.439" starttime="20151110 17:00:28.439"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Cover Note not entered</arg>
</arguments>
<assign>
<var>${CvrNTStatus}</var>
</assign>
<msg timestamp="20151110 17:00:29.449" level="INFO">${CvrNTStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:29.449" starttime="20151110 17:00:29.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${CvrNTStatus}==False</arg>
<arg>Get Messages</arg>
</arguments>
<assign>
<var>${messageDetails}</var>
</assign>
<msg timestamp="20151110 17:00:29.454" level="INFO">${messageDetails} = None</msg>
<status status="PASS" endtime="20151110 17:00:29.454" starttime="20151110 17:00:29.449"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${messageDetails}</arg>
</arguments>
<msg timestamp="20151110 17:00:29.459" level="INFO">List is empty.</msg>
<status status="PASS" endtime="20151110 17:00:29.459" starttime="20151110 17:00:29.454"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 17:00:29.554" html="yes" level="INFO">&lt;a href="screenshot_22.jpg"&gt;&lt;img src="screenshot_22.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 17:00:29.554" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 17:00:29.554" starttime="20151110 17:00:29.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${CvrNTStatus}==False</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:29.559" starttime="20151110 17:00:29.554"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[Enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:29.564" starttime="20151110 17:00:29.559"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20151110 17:00:30.564" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:30.564" starttime="20151110 17:00:29.564"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Client Address Details</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:30.579" starttime="20151110 17:00:30.564"></status>
</kw>
<kw name="Set Cursor Position" library="Insurance">
<doc>To set the cursor at the start of the text passed as parameter.Instance is used if we have more than 1 identical text in the screen.</doc>
<arguments>
<arg>Seqno</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:30.594" starttime="20151110 17:00:30.584"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[BackTab]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:30.604" starttime="20151110 17:00:30.594"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:30.614" starttime="20151110 17:00:30.604"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20151110 17:00:31.615" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:31.615" starttime="20151110 17:00:30.614"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[Enter]</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:37.627" starttime="20151110 17:00:31.615"></status>
</kw>
<kw name="Get Messages" library="common">
<assign>
<var>${messageDetails}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 17:00:38.633" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:38.633" starttime="20151110 17:00:37.632"></status>
</kw>
<kw name="Get Value By Row And Column" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>24</arg>
<arg>1</arg>
<arg>80</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 17:00:38.638" level="INFO">${lastRowData} =                Contract F0138734 created                                        </msg>
<status status="PASS" endtime="20151110 17:00:38.638" starttime="20151110 17:00:38.633"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 17:00:38.708" html="yes" level="INFO">&lt;a href="screenshot_23.jpg"&gt;&lt;img src="screenshot_23.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 17:00:38.708" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 17:00:38.708" starttime="20151110 17:00:38.638"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastRowData.strip()}</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 17:00:38.713" level="INFO">${lastRowData} = Contract F0138734 created</msg>
<status status="PASS" endtime="20151110 17:00:38.713" starttime="20151110 17:00:38.708"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lastRowData}</arg>
<arg>¦</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 17:00:38.713" level="INFO">${tempList} = [u'Contract F0138734 created']</msg>
<status status="PASS" endtime="20151110 17:00:38.713" starttime="20151110 17:00:38.713"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:38.713" starttime="20151110 17:00:38.713"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<msg timestamp="20151110 17:00:38.718" level="INFO">List has one item:
Contract F0138734 created</msg>
<status status="PASS" endtime="20151110 17:00:38.718" starttime="20151110 17:00:38.713"></status>
</kw>
<msg timestamp="20151110 17:00:38.718" level="INFO">${messageDetails} = [u'Contract F0138734 created']</msg>
<status status="PASS" endtime="20151110 17:00:38.718" starttime="20151110 17:00:37.627"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Contract</arg>
</arguments>
<assign>
<var>${CvrNTStatus}</var>
</assign>
<msg timestamp="20151110 17:00:38.723" level="INFO">${CvrNTStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:38.723" starttime="20151110 17:00:38.718"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>created</arg>
</arguments>
<assign>
<var>${CreastedStatus}</var>
</assign>
<msg timestamp="20151110 17:00:38.728" level="INFO">${CreastedStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:38.728" starttime="20151110 17:00:38.723"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>New Policy Submenu</arg>
</arguments>
<assign>
<var>${InwardScreenStatus}</var>
</assign>
<msg timestamp="20151110 17:00:38.733" level="INFO">${InwardScreenStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:38.733" starttime="20151110 17:00:38.728"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${CvrNTStatus}'=='True' and '${CreastedStatus}'=='True' and '${InwardScreenStatus}'=='True'</arg>
</arguments>
<assign>
<var>${newPolicyStatus}</var>
</assign>
<msg timestamp="20151110 17:00:38.733" level="INFO">${newPolicyStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:38.733" starttime="20151110 17:00:38.733"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${newPolicyStatus}</arg>
</arguments>
<assign>
<var>${KWStatus}</var>
</assign>
<msg timestamp="20151110 17:00:38.733" level="INFO">${KWStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:38.733" starttime="20151110 17:00:38.733"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 17:00:38.793" html="yes" level="INFO">&lt;a href="screenshot_24.jpg"&gt;&lt;img src="screenshot_24.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 17:00:38.793" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 17:00:38.793" starttime="20151110 17:00:38.733"></status>
</kw>
<msg timestamp="20151110 17:00:38.793" level="INFO">${npCrtStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:38.793" starttime="20151110 17:00:12.989"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${Inwarddetails}</arg>
<arg>ExpectedPolicyCreationStatus</arg>
</arguments>
<assign>
<var>${expPolicyCreationStatus}</var>
</assign>
<msg timestamp="20151110 17:00:38.798" level="INFO">${expPolicyCreationStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:38.798" starttime="20151110 17:00:38.793"></status>
</kw>
<kw name="Get Messages" library="common">
<assign>
<var>${messageDetails}</var>
</assign>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20151110 17:00:39.798" level="INFO">Slept 1 second</msg>
<status status="PASS" endtime="20151110 17:00:39.798" starttime="20151110 17:00:38.798"></status>
</kw>
<kw name="Get Value By Row And Column" library="Insurance">
<doc>To capture the output values or any other values on the screen based on the row, column and length of the text</doc>
<arguments>
<arg>24</arg>
<arg>1</arg>
<arg>80</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 17:00:39.808" level="INFO">${lastRowData} =                Contract F0138734 created                                        </msg>
<status status="PASS" endtime="20151110 17:00:39.813" starttime="20151110 17:00:39.798"></status>
</kw>
<kw name="Capture Screenshot" library="Insurance">
<doc>"It will capture the screenshots based on ${globalScreenShot}  global variable value.</doc>
<msg timestamp="20151110 17:00:39.918" html="yes" level="INFO">&lt;a href="screenshot_25.jpg"&gt;&lt;img src="screenshot_25.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20151110 17:00:39.918" level="INFO">bStatus: True</msg>
<status status="PASS" endtime="20151110 17:00:39.918" starttime="20151110 17:00:39.813"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${lastRowData.strip()}</arg>
</arguments>
<assign>
<var>${lastRowData}</var>
</assign>
<msg timestamp="20151110 17:00:39.918" level="INFO">${lastRowData} = Contract F0138734 created</msg>
<status status="PASS" endtime="20151110 17:00:39.918" starttime="20151110 17:00:39.918"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${lastRowData}</arg>
<arg>¦</arg>
</arguments>
<assign>
<var>${tempList}</var>
</assign>
<msg timestamp="20151110 17:00:39.918" level="INFO">${tempList} = [u'Contract F0138734 created']</msg>
<status status="PASS" endtime="20151110 17:00:39.918" starttime="20151110 17:00:39.918"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${tempList}</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:39.923" starttime="20151110 17:00:39.923"></status>
</kw>
<kw name="Log List" library="Collections">
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<arguments>
<arg>${tempList}</arg>
</arguments>
<msg timestamp="20151110 17:00:39.923" level="INFO">List has one item:
Contract F0138734 created</msg>
<status status="PASS" endtime="20151110 17:00:39.923" starttime="20151110 17:00:39.923"></status>
</kw>
<msg timestamp="20151110 17:00:39.923" level="INFO">${messageDetails} = [u'Contract F0138734 created']</msg>
<status status="PASS" endtime="20151110 17:00:39.923" starttime="20151110 17:00:38.798"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${npCrtStatus}'=='True' and '${expPolicyCreationStatus}'=='True'</arg>
</arguments>
<assign>
<var>${condition1}</var>
</assign>
<msg timestamp="20151110 17:00:39.923" level="INFO">${condition1} = True</msg>
<status status="PASS" endtime="20151110 17:00:39.923" starttime="20151110 17:00:39.923"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${npCrtStatus}'=='False' and '${expPolicyCreationStatus}'=='False'</arg>
</arguments>
<assign>
<var>${condition2}</var>
</assign>
<msg timestamp="20151110 17:00:39.928" level="INFO">${condition2} = False</msg>
<status status="PASS" endtime="20151110 17:00:39.928" starttime="20151110 17:00:39.923"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${npCrtStatus}'=='True' and '${expPolicyCreationStatus}'=='False'</arg>
</arguments>
<assign>
<var>${condition3}</var>
</assign>
<msg timestamp="20151110 17:00:39.928" level="INFO">${condition3} = False</msg>
<status status="PASS" endtime="20151110 17:00:39.928" starttime="20151110 17:00:39.928"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${npCrtStatus}'=='False' and '${expPolicyCreationStatus}'=='True'</arg>
</arguments>
<assign>
<var>${condition4}</var>
</assign>
<msg timestamp="20151110 17:00:39.933" level="INFO">${condition4} = False</msg>
<status status="PASS" endtime="20151110 17:00:39.933" starttime="20151110 17:00:39.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Set Test Message</arg>
<arg>INFO: For ${Recordvalue} with Inward Transaction: @{newInwardDetails}[0], Policy got created : ${messageDetails} \n</arg>
<arg>append=True</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>INFO: For ${Recordvalue} with Inward Transaction: @{newInwardDetails}[0], Policy got created : ${messageDetails} \n</arg>
<arg>append=True</arg>
</arguments>
<msg timestamp="20151110 17:00:39.933" level="INFO">Set test message to:
INFO:For Record1, Inward Transaction Type selection was failed. Error Details: [u'Invalid code            '] INFO: For Record2, Inward Transaction got created, Transaction Details: [u'IO Number :- 10/PP/A00012253 Application No :- B0031787'] 
 INFO: For Record2 with Inward Transaction: 10/PP/A00012253, Policy got created : [u'Contract F0138734 created'] 
</msg>
<status status="PASS" endtime="20151110 17:00:39.933" starttime="20151110 17:00:39.933"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:39.933" starttime="20151110 17:00:39.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Wait For Text</arg>
<arg>New Policy Submenu</arg>
</arguments>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>New Policy Submenu</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:39.938" starttime="20151110 17:00:39.933"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:39.938" starttime="20151110 17:00:39.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:39.943" starttime="20151110 17:00:39.938"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:39.943" starttime="20151110 17:00:39.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Wait For Text</arg>
<arg>New Business</arg>
</arguments>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>New Business</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:40.948" starttime="20151110 17:00:39.943"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:40.948" starttime="20151110 17:00:39.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Press Key</arg>
<arg>[PF3]</arg>
</arguments>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:40.963" starttime="20151110 17:00:40.953"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:40.963" starttime="20151110 17:00:40.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Update Result to Log File</arg>
<arg>${Recordvalue}</arg>
<arg>'Pass</arg>
<arg>Inward Transaction: @{newInwardDetails}[0], Policy got created : ${messageDetails}</arg>
</arguments>
<kw name="Update Result to Log File" library="common">
<arguments>
<arg>${Recordvalue}</arg>
<arg>'Pass</arg>
<arg>Inward Transaction: @{newInwardDetails}[0], Policy got created : ${messageDetails}</arg>
</arguments>
<kw name="Get Latest File In Folder" library="CustomLibrary">
<arguments>
<arg>${OUTPUT_DIR}</arg>
<arg>screenshot</arg>
</arguments>
<assign>
<var>${ScreenShotFileName}</var>
</assign>
<msg timestamp="20151110 17:00:40.963" level="INFO">D:\TenX\FutureGeneraliPOC\Results\20151110_165845\screenshot_25.jpg</msg>
<msg timestamp="20151110 17:00:40.968" level="INFO">${ScreenShotFileName} = D:\TenX\FutureGeneraliPOC\Results\20151110_165845\screenshot_25.jpg</msg>
<status status="PASS" endtime="20151110 17:00:40.968" starttime="20151110 17:00:40.963"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>RecordNumber</arg>
<arg>${RecorNumber}</arg>
<arg>Status</arg>
<arg>${Status}</arg>
<arg>Message</arg>
<arg>${Message}</arg>
<arg>ScreenShot</arg>
<arg>File:\\\\${ScreenShotFileName}</arg>
</arguments>
<assign>
<var>${Resultdict}</var>
</assign>
<msg timestamp="20151110 17:00:40.968" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20151110 17:00:40.968" level="INFO">${Resultdict} = {u'RecordNumber': u'Record2', u'Status': u"'Pass", u'Message': u"Inward Transaction: 10/PP/A00012253, Policy got created : [u'Contract F0138734 created']", u'ScreenShot': u'File:\\\\D:\\TenX\\FutureGe...</msg>
<status status="PASS" endtime="20151110 17:00:40.968" starttime="20151110 17:00:40.968"></status>
</kw>
<kw name="Updated Ms Excel File" library="CustomLibrary">
<doc>It retuen the list of registration codes</doc>
<arguments>
<arg>${LogExcelResultFile}</arg>
<arg>InwardTransactionData</arg>
<arg>${Resultdict}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:42.209" starttime="20151110 17:00:40.968"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:42.209" starttime="20151110 17:00:40.963"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:42.209" starttime="20151110 17:00:40.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${condition1}</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20151110 17:00:42.214" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20151110 17:00:42.214" starttime="20151110 17:00:42.209"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:42.214" starttime="20151110 17:00:42.209"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:42.214" starttime="20151110 16:59:17.300"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:42.214" starttime="20151110 16:59:00.185"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:42.214" starttime="20151110 16:59:00.185"></status>
</kw>
<kw name="Logout From Application" library="common">
<assign>
<var>${logoutStatus}</var>
</assign>
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<msg timestamp="20151110 17:00:42.279" html="yes" level="INFO">&lt;a href="screenshot_26.jpg"&gt;&lt;img src="screenshot_26.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20151110 17:00:42.279" starttime="20151110 17:00:42.214"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>False</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 17:00:42.279" level="INFO">${kwStatus} = False</msg>
<status status="PASS" endtime="20151110 17:00:42.279" starttime="20151110 17:00:42.279"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>False</arg>
</arguments>
<assign>
<var>${bStatus2}</var>
</assign>
<msg timestamp="20151110 17:00:42.279" level="INFO">${bStatus2} = False</msg>
<status status="PASS" endtime="20151110 17:00:42.279" starttime="20151110 17:00:42.279"></status>
</kw>
<kw type="for" name="${iIndex} IN RANGE [ 0 | 10 ]">
<kw type="foritem" name="${iIndex} = 0">
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>System Master Menu</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${bStatus1}</var>
</assign>
<msg timestamp="20151110 17:00:42.289" level="INFO">${bStatus1} = True</msg>
<status status="PASS" endtime="20151110 17:00:42.289" starttime="20151110 17:00:42.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bStatus1}==False</arg>
<arg>Wait For Text</arg>
<arg>Sign-on Information</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${bStatus2}</var>
</assign>
<msg timestamp="20151110 17:00:42.289" level="INFO">${bStatus2} = None</msg>
<status status="PASS" endtime="20151110 17:00:42.289" starttime="20151110 17:00:42.289"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${bStatus1}==True</arg>
<arg>False</arg>
<arg>${bStatus2}</arg>
</arguments>
<assign>
<var>${bStatus2}</var>
</assign>
<msg timestamp="20151110 17:00:42.289" level="INFO">${bStatus2} = False</msg>
<status status="PASS" endtime="20151110 17:00:42.289" starttime="20151110 17:00:42.289"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${bStatus1}==True or ${bStatus2}==True</arg>
</arguments>
<assign>
<var>${bStatus}</var>
</assign>
<msg timestamp="20151110 17:00:42.294" level="INFO">${bStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:42.294" starttime="20151110 17:00:42.289"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bStatus}==True</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20151110 17:00:42.294" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20151110 17:00:42.294" starttime="20151110 17:00:42.294"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:42.294" starttime="20151110 17:00:42.294"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:42.294" starttime="20151110 17:00:42.279"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:42.294" starttime="20151110 17:00:42.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bStatus}==False</arg>
<arg>Return From Keyword</arg>
<arg>${kwStatus}</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:42.294" starttime="20151110 17:00:42.294"></status>
</kw>
<kw name="Press Key" library="Insurance">
<doc>"Use to perform keyboard events.</doc>
<arguments>
<arg>[PF3]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:42.299" starttime="20151110 17:00:42.294"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${bStatus2}==True</arg>
<arg>Press Key</arg>
<arg>[enter]</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:42.304" starttime="20151110 17:00:42.299"></status>
</kw>
<kw name="Wait For Text" library="Insurance">
<doc>Waits for the text for the time mentioned, to be displayed in the screen. Time in seconds</doc>
<arguments>
<arg>Sign On</arg>
<arg>10</arg>
</arguments>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 17:00:43.314" level="INFO">${kwStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:43.314" starttime="20151110 17:00:42.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${kwStatus}</arg>
<arg>Set Test Message</arg>
<arg>\n INFO: Logged out Successfully</arg>
<arg>append=True</arg>
</arguments>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>\n INFO: Logged out Successfully</arg>
<arg>append=True</arg>
</arguments>
<msg timestamp="20151110 17:00:43.319" level="INFO">Set test message to:
INFO:For Record1, Inward Transaction Type selection was failed. Error Details: [u'Invalid code            '] INFO: For Record2, Inward Transaction got created, Transaction Details: [u'IO Number :- 10/PP/A00012253 Application No :- B0031787'] 
 INFO: For Record2 with Inward Transaction: 10/PP/A00012253, Policy got created : [u'Contract F0138734 created'] 
 
INFO: Logged out Successfully</msg>
<status status="PASS" endtime="20151110 17:00:43.319" starttime="20151110 17:00:43.314"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:43.319" starttime="20151110 17:00:43.314"></status>
</kw>
<msg timestamp="20151110 17:00:43.319" level="INFO">${logoutStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:43.319" starttime="20151110 17:00:42.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${logoutStatus}==False</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>Logout from application was failed.</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:43.324" starttime="20151110 17:00:43.319"></status>
</kw>
<kw type="teardown" name="Close AS400 Console" library="common">
<kw name="Take Screenshot" library="Screenshot">
<doc>Takes a screenshot in JPEG format and embeds it into the log file.</doc>
<msg timestamp="20151110 17:00:43.404" html="yes" level="INFO">&lt;a href="screenshot_27.jpg"&gt;&lt;img src="screenshot_27.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20151110 17:00:43.404" starttime="20151110 17:00:43.329"></status>
</kw>
<kw name="Shutdown Console" library="Insurance">
<doc>Stops the ongoing connection and closes the Emulator</doc>
<assign>
<var>${kwStatus}</var>
</assign>
<msg timestamp="20151110 17:00:45.750" level="INFO">${kwStatus} = True</msg>
<status status="PASS" endtime="20151110 17:00:45.750" starttime="20151110 17:00:43.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${kwStatus}==False</arg>
<arg>Fail and Capture ScreenShot</arg>
<arg>\n AS400 console can't shutdown</arg>
</arguments>
<status status="PASS" endtime="20151110 17:00:45.755" starttime="20151110 17:00:45.750"></status>
</kw>
<kw name="Run" library="OperatingSystem">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>taskkill /f /im pcsws.exe</arg>
</arguments>
<msg timestamp="20151110 17:00:45.765" level="INFO">Running command 'taskkill /f /im pcsws.exe 2&gt;&amp;1'</msg>
<status status="PASS" endtime="20151110 17:00:45.860" starttime="20151110 17:00:45.755"></status>
</kw>
<kw name="Set Test Message" library="BuiltIn">
<doc>Sets message for the current test case.</doc>
<arguments>
<arg>\n INFO: AS400 Console closed successfully</arg>
<arg>append=True</arg>
</arguments>
<msg timestamp="20151110 17:00:45.860" level="INFO">Set test message to:
INFO:For Record1, Inward Transaction Type selection was failed. Error Details: [u'Invalid code            '] INFO: For Record2, Inward Transaction got created, Transaction Details: [u'IO Number :- 10/PP/A00012253 Application No :- B0031787'] 
 INFO: For Record2 with Inward Transaction: 10/PP/A00012253, Policy got created : [u'Contract F0138734 created'] 
 
INFO: Logged out Successfully 
INFO: AS400 Console closed successfully</msg>
<status status="PASS" endtime="20151110 17:00:45.860" starttime="20151110 17:00:45.860"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:45.860" starttime="20151110 17:00:43.324"></status>
</kw>
<status status="PASS" endtime="20151110 17:00:45.865" critical="yes" starttime="20151110 16:58:46.310">INFO:For Record1, Inward Transaction Type selection was failed. Error Details: [u'Invalid code            '] INFO: For Record2, Inward Transaction got created, Transaction Details: [u'IO Number :- 10/PP/A00012253 Application No :- B0031787'] 
 INFO: For Record2 with Inward Transaction: 10/PP/A00012253, Policy got created : [u'Contract F0138734 created'] 
 
INFO: Logged out Successfully 
INFO: AS400 Console closed successfully</status>
</test>
<status status="PASS" endtime="20151110 17:00:45.865" starttime="20151110 16:58:46.076"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="FirePolicy" pass="1">FirePolicy</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20151110 16:58:46.247" level="ERROR">Error in test library 'AutoItLibrary': Creating keyword 'Run' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20151110 16:58:46.247" level="ERROR">Error in test library 'AutoItLibrary': Creating keyword 'Win Wait' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20151110 16:58:46.247" level="ERROR">Error in test library 'AutoItLibrary': Creating keyword 'Win Wait Active' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20151110 16:58:46.247" level="ERROR">Error in test library 'AutoItLibrary': Creating keyword 'Win Wait Close' failed: Keyword with same name defined multiple times.</msg>
<msg timestamp="20151110 16:59:15.959" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
<msg timestamp="20151110 17:00:40.968" level="WARN">Giving keys and values separately to 'Create Dictionary' keyword is deprecated. Use 'key=value' syntax instead.</msg>
</errors>
</robot>
